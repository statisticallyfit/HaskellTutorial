
==================== FINAL INTERFACE ====================
2017-12-27 12:43:10.753434 UTC

interface main:PhoneSpec [orphan module] 8022
  interface hash: 7290ea933f1f399055f7c6037bf49ba5
  ABI hash: 4ca60c0b97840dde74f20e718deec5dd
  export-list hash: 179552d1bd94123ef9e24a3cc8b6fae4
  orphan hash: 969227d15aa5190939e3cdddf8150a16
  flag hash: fc8f6707f1e9ac370664f4375ef5ab8f
  sig of: Nothing
  used TH splices: False
  where
exports:
  PhoneSpec.main
  PhoneSpec.spec
module dependencies:
package dependencies: HUnit-1.6.0.0 PhoneProject-0.1.0.0
                      QuickCheck-2.10.1 ansi-terminal-0.7.1.1 array-0.5.2.0 async-2.1.1.1
                      base-4.10.1.0 call-stack-0.1.0 colour-2.3.4 containers-0.5.10.2
                      deepseq-1.4.3.0 directory-1.3.0.2 filepath-1.4.1.2
                      ghc-boot-th-8.2.2 ghc-prim-0.5.1.1 hspec-2.4.4 hspec-core-2.4.4
                      hspec-expectations-0.8.2 integer-gmp-1.0.1.0 pretty-1.1.3.3
                      primitive-0.6.2.0 quickcheck-io-0.2.0 random-1.1 setenv-0.1.1.3
                      stm-2.4.4.1 template-haskell-2.12.0.0 tf-random-0.5 time-1.8.0.2
                      transformers-0.5.2.0 unix-2.7.2.2
orphans: colour-2.3.4:Data.Colour
         quickcheck-io-0.2.0:Test.QuickCheck.IO
         stm-2.4.4.1:Control.Monad.STM
         transformers-0.5.2.0:Control.Monad.Trans.Error
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian base-4.10.1.0:GHC.Float
         base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Complex base-4.10.1.0:Data.Either
                         base-4.10.1.0:Data.Functor.Compose base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats containers-0.5.10.2:Data.IntMap.Internal
                         containers-0.5.10.2:Data.IntSet.Internal
                         containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Sequence.Internal
                         containers-0.5.10.2:Data.Set.Internal
                         ghc-boot-th-8.2.2:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.2.2:GHC.LanguageExtensions.Type
                         hspec-core-2.4.4:Test.Hspec.Core.Example
                         pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0:Control.Monad.Primitive
                         template-haskell-2.12.0.0:Language.Haskell.TH.Syntax
import  -/  PhoneProject-0.1.0.0:Phone a19e77c6a7f7ac0868cc10d865935ba9
import  -/  QuickCheck-2.10.1:Test.QuickCheck e7cc3bba148aa39b704c2b95e2084a35
import  -/  QuickCheck-2.10.1:Test.QuickCheck.Arbitrary 163b49d50f1974012c75b48cc2898129
import  -/  QuickCheck-2.10.1:Test.QuickCheck.Gen 20415c0ff6bb059b7cbac945820aef4e
import  -/  QuickCheck-2.10.1:Test.QuickCheck.Property 0587df897fa7010c35224e42faa9f0ee
import  -/  base-4.10.1.0:Data.Char fe4e3458190deeac19969ce15e33bed9
import  -/  base-4.10.1.0:Data.Foldable 9ed87455d68e87ff2b5b8725eae9897e
import  -/  base-4.10.1.0:Data.List 4ab7fa2a1b87502b23af891a384f0506
import  -/  base-4.10.1.0:Data.Maybe 07738c5485acb328136bb15596f8b845
import  -/  base-4.10.1.0:Data.OldList 555420b092ca8cf0a8f9666bc0e07dcf
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.List e3060fbeb44ce0038e6b4dedf2dd9cf1
import  -/  base-4.10.1.0:GHC.Num 6e1dc5d36d99a802edb39b92bb1923b8
import  -/  base-4.10.1.0:GHC.Show 0a8ce2b5e533d1c2cfb7954e6736be45
import  -/  base-4.10.1.0:GHC.Unicode 49c9de4fffed0d9be65aaeb6a60b757c
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  ghc-prim-0.5.1.1:GHC.Classes 93e2660065dce9329577e83d76d8f0d4
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
import  -/  hspec-2.4.4:Test.Hspec ba38ef48dc1d0ec5b27530d4aedc9fea
import  -/  hspec-core-2.4.4:Test.Hspec.Core.Runner 758c3c8ea6352d9bfd12342a375dbee4
import  -/  hspec-core-2.4.4:Test.Hspec.Core.Spec d778436d70e907796462bb0fcd42fd23
import  -/  hspec-core-2.4.4:Test.Hspec.Core.Spec.Monad c55feb8978f316918b7e75d4a3a731a5
import  -/  hspec-expectations-0.8.2:Test.Hspec.Expectations 8bc0d926d5b42398a254e04604809fe4
54dddc6673e5dff3eec0c98de0594b98
  $fArbitraryButton ::
    Test.QuickCheck.Arbitrary.Arbitrary Phone.Button
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Phone.Button
                  PhoneSpec.$fArbitraryButton_$carbitrary
                  PhoneSpec.$fArbitraryButton_$cshrink -}
65cfa5e77308c0c55cf1ce19a99f7bf8
  $fArbitraryButton1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
8c7b8ab70d224270f5472a1d50b005e0
  $fArbitraryButton_$carbitrary ::
    Test.QuickCheck.Gen.Gen Phone.Button
  {- Unfolding: (Test.QuickCheck.Gen.elements
                   @ Phone.Button
                   PhoneSpec.btnsAllowed) -}
0d8674bbd1238a78547e1c9e217c1112
  $fArbitraryButton_$cshrink :: Phone.Button -> [Phone.Button]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Phone.Button) -> GHC.Types.[] @ Phone.Button) -}
5d6508f9a506de465eb740801fd345d2
  $fArbitraryButton_go ::
    GHC.Integer.Type.Integer -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <S,U> -}
610c7e76c4cc2207a2ff9d6e49f4a673
  $s$fArbitrary(,)1 ::
    Test.QuickCheck.Random.QCGen
    -> GHC.Types.Int -> (GHC.Types.Char, GHC.Types.Int)
  {- Arity: 2, Strictness: <S(SSSSLL),1*U(U,U,U,1*U,A,A)><L,U(U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Test.QuickCheck.Random.QCGen) (eta1 :: GHC.Types.Int) ->
                 Test.QuickCheck.Arbitrary.$fArbitrary(,)2
                   @ GHC.Types.Int
                   @ GHC.Types.Char
                   Test.QuickCheck.Arbitrary.$fArbitraryChar_$carbitrary
                   Test.QuickCheck.Arbitrary.$fArbitrary1IntMap_$sarbitrarySizedIntegral
                     `cast`
                   (Sym (Test.QuickCheck.Gen.N:Gen[0] <GHC.Types.Int>_R))
                   eta
                   eta1) -}
fc2ce004338cf7ab1507159869cef645
  $s$fEq(,) :: GHC.Classes.Eq (GHC.Types.Char, Phone.Presses)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Types.Char, Phone.Presses)
                  (GHC.Classes.$fEq(,)_$c==
                     @ GHC.Types.Char
                     @ Phone.Presses
                     GHC.Classes.$fEqChar
                     GHC.Classes.$fEqInt)
                  (GHC.Classes.$fEq(,)_$c/=
                     @ GHC.Types.Char
                     @ Phone.Presses
                     GHC.Classes.$fEqChar
                     GHC.Classes.$fEqInt) -}
be714f42464e5a306c7761d4abd15fce
  $s$fEq[] :: GHC.Classes.Eq [(Phone.Token, Phone.Presses)]
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [(Phone.Token, Phone.Presses)]
                  (GHC.Classes.$fEq[]_$c==
                     @ (Phone.Token, Phone.Presses)
                     PhoneSpec.$s$fEq(,))
                  PhoneSpec.$s$fEq[]_$s$fEq[]_$c/= -}
5ab0bfe3f38c3021b433ca62e6d2e722
  $s$fEq[]_$s$fEq[]_$c/= ::
    [(Phone.Token, Phone.Presses)]
    -> [(Phone.Token, Phone.Presses)] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: [(Phone.Token, Phone.Presses)])
                   (y :: [(Phone.Token, Phone.Presses)]) ->
                 case GHC.Classes.$fEq[]_$c==
                        @ (Phone.Token, Phone.Presses)
                        PhoneSpec.$s$fEq(,)
                        x
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
1795735e24e18691a53424663ad9cec5
  $s$fShow(,) :: GHC.Show.Show (GHC.Types.Char, GHC.Types.Int)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Types.Char, GHC.Types.Int)
                  (GHC.Show.$fShow(,)_$cshowsPrec
                     @ GHC.Types.Char
                     @ GHC.Types.Int
                     GHC.Show.$fShowChar
                     GHC.Show.$fShowInt)
                  (\ (x :: (GHC.Types.Char, GHC.Types.Int)) ->
                   GHC.Show.$fShow(,)_$cshowsPrec
                     @ GHC.Types.Char
                     @ GHC.Types.Int
                     GHC.Show.$fShowChar
                     GHC.Show.$fShowInt
                     GHC.Show.$fShow(,)1
                     x
                     (GHC.Types.[] @ GHC.Types.Char))
                  (\ (ls :: [(GHC.Types.Char, GHC.Types.Int)])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ (GHC.Types.Char, GHC.Types.Int)
                     (GHC.Show.$fShow(,)_$cshowsPrec
                        @ GHC.Types.Char
                        @ GHC.Types.Int
                        GHC.Show.$fShowChar
                        GHC.Show.$fShowInt
                        GHC.Show.$fShow(,)1)
                     ls
                     s) -}
523fce2467d9d4d07f95cf6fbce36e4e
  $s$fShow[] :: GHC.Show.Show [(Phone.Token, Phone.Presses)]
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [(Phone.Token, Phone.Presses)]
                  (\ (ds :: GHC.Types.Int)
                     (ls :: [(GHC.Types.Char, GHC.Types.Int)])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ (GHC.Types.Char, GHC.Types.Int)
                     (GHC.Show.$fShow(,)_$cshowsPrec
                        @ GHC.Types.Char
                        @ GHC.Types.Int
                        GHC.Show.$fShowChar
                        GHC.Show.$fShowInt
                        GHC.Show.$fShow(,)1)
                     ls
                     s)
                  (\ (x :: [(Phone.Token, Phone.Presses)]) ->
                   GHC.Show.showList__
                     @ (GHC.Types.Char, GHC.Types.Int)
                     (GHC.Show.$fShow(,)_$cshowsPrec
                        @ GHC.Types.Char
                        @ GHC.Types.Int
                        GHC.Show.$fShowChar
                        GHC.Show.$fShowInt
                        GHC.Show.$fShow(,)1)
                     x
                     (GHC.Types.[] @ GHC.Types.Char))
                  (\ (ls :: [[(Phone.Token, Phone.Presses)]])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ [(Phone.Token, Phone.Presses)]
                     (\ (ls1 :: [(GHC.Types.Char, GHC.Types.Int)])
                        (s1 :: GHC.Base.String)[OneShot] ->
                      GHC.Show.showList__
                        @ (GHC.Types.Char, GHC.Types.Int)
                        (GHC.Show.$fShow(,)_$cshowsPrec
                           @ GHC.Types.Char
                           @ GHC.Types.Int
                           GHC.Show.$fShowChar
                           GHC.Show.$fShowInt
                           GHC.Show.$fShow(,)1)
                        ls1
                        s1)
                     ls
                     s) -}
8108193de873b775eb429c2437c5f6f2
  $s$fShow[]1 :: GHC.Show.Show [Phone.Button]
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [Phone.Button]
                  (\ (ds :: GHC.Types.Int) -> Phone.$fShowButton_$cshowList)
                  (\ (x :: [Phone.Button]) ->
                   GHC.Show.showList__
                     @ Phone.Button
                     Phone.$fShowButton1
                     x
                     (GHC.Types.[] @ GHC.Types.Char))
                  (\ (ls :: [[Phone.Button]]) (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ [Phone.Button]
                     Phone.$fShowButton_$cshowList
                     ls
                     s) -}
edf908f99cb33572c932e2d831b6e922
  $s$fShow[]_$cshow1 :: [Phone.Button] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: [Phone.Button]) ->
                 GHC.Show.showList__
                   @ Phone.Button
                   Phone.$fShowButton1
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
6f63ef1e8962ada1f237642baef7f56e
  $s$fShow[]_$cshowList1 :: [[Phone.Button]] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [[Phone.Button]]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ [Phone.Button]
                   Phone.$fShowButton_$cshowList
                   ls
                   s) -}
38b8ede3542b58c333ec2a1378f63b38
  $s$fTestable(->)3 :: GHC.Show.Show [[Phone.FingerMove]]
  {- Unfolding: (GHC.Show.$fShow[]
                   @ [Phone.FingerMove]
                   PhoneSpec.$s$fShow[]) -}
e55e91e4a78f20a794c77430568f68d3
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   PhoneSpec.$trModule3
                   PhoneSpec.$trModule1) -}
69482b983a92feadfa53d1ec28c7a66e
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS PhoneSpec.$trModule2) -}
a174ad6cc017e17b33d7d13cd80ee4cc
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PhoneSpec"#) -}
5667ad909920a5310a0ee25ea52120fb
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS PhoneSpec.$trModule4) -}
ffc75ce7975fa969c20206469582bc94
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
80fc407d190cab67871eb675bfc1ecab
  $wf :: GHC.Prim.Char# -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Char#) ->
                 case {__pkg_ccall base-4.10.1.0 GHC.Prim.Int#
                                                 -> GHC.Prim.State# GHC.Prim.RealWorld
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       GHC.Prim.Int# #)}
                        (GHC.Prim.ord# ww)
                        GHC.Prim.realWorld# of wild1 { (#,#) ds ds1 ->
                 case ds1 of wild2 {
                   DEFAULT
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.ltChar# ww '\128'#) of wild {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case Phone.$wpresses (GHC.Types.C# ww) of ww1 { DEFAULT ->
                           case Phone.$wcost ww of ww2 { DEFAULT ->
                           GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.==# ww1 ww2) } } }
                   0# -> GHC.Types.True } }) -}
53679f97e39ebfc887e883766f9941fc
  $wlvl ::
    GHC.Types.Char
    -> GHC.Types.Int -> [(GHC.Types.Char, GHC.Types.Int)]
  {- Arity: 2, Strictness: <L,U(U)><L,U(U)>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Char) (ww1 :: GHC.Types.Int) ->
                 let {
                   z :: [(GHC.Types.Char, GHC.Types.Int)]
                   = case ww1 of ww2 { GHC.Types.I# ww3 ->
                     letrec {
                       go2 :: [GHC.Types.Int] -> [(GHC.Types.Char, GHC.Types.Int)]
                         {- Arity: 1, Strictness: <S,1*U> -}
                       = \ (ds :: [GHC.Types.Int]) ->
                         case ds of wild {
                           [] -> GHC.Types.[] @ (GHC.Types.Char, GHC.Types.Int)
                           : y ys
                           -> GHC.Types.: @ (GHC.Types.Char, GHC.Types.Int) (ww, y) (go2 ys) }
                     } in
                     go2 (Test.QuickCheck.Arbitrary.$w$sshrinkIntegral ww3) }
                 } in
                 letrec {
                   go2 :: [GHC.Types.Char] -> [(GHC.Types.Char, GHC.Types.Int)]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [GHC.Types.Char]) ->
                     case ds of wild {
                       [] -> z
                       : y ys
                       -> GHC.Types.:
                            @ (GHC.Types.Char, GHC.Types.Int)
                            (y, ww1)
                            (go2 ys) }
                 } in
                 go2 (Test.QuickCheck.Arbitrary.$fArbitraryChar_$cshrink ww)) -}
92f1f8ee02ed951d6a1c604441b304d5
  $wlvl1 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Word#
    -> GHC.Prim.Word#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> [[Phone.FingerMove]]
  {- Arity: 5, Strictness: <S,U><S,U><S,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Word#)
                   (ww2 :: GHC.Prim.Word#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#) ->
                 Test.QuickCheck.Gen.$wlistOf
                   @ [Phone.FingerMove]
                   PhoneSpec.main153
                     `cast`
                   (Sym (Test.QuickCheck.Gen.N:Gen[0]
                             <[(Phone.Token, Phone.Presses)]>_R))
                   ww
                   ww1
                   ww2
                   ww3
                   ww4) -}
3947095f0af9228abb9257ccbd0541ac
  $wlvl2 ::
    GHC.Types.Char
    -> GHC.Types.Int -> [(GHC.Types.Char, GHC.Types.Int)]
  {- Arity: 2, Strictness: <L,U(U)><L,U(U)>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Char) (ww1 :: GHC.Types.Int) ->
                 let {
                   z :: [(GHC.Types.Char, GHC.Types.Int)]
                   = case ww1 of ww2 { GHC.Types.I# ww3 ->
                     letrec {
                       go2 :: [GHC.Types.Int] -> [(GHC.Types.Char, GHC.Types.Int)]
                         {- Arity: 1, Strictness: <S,1*U> -}
                       = \ (ds :: [GHC.Types.Int]) ->
                         case ds of wild {
                           [] -> GHC.Types.[] @ (GHC.Types.Char, GHC.Types.Int)
                           : y ys
                           -> GHC.Types.: @ (GHC.Types.Char, GHC.Types.Int) (ww, y) (go2 ys) }
                     } in
                     go2 (Test.QuickCheck.Arbitrary.$w$sshrinkIntegral ww3) }
                 } in
                 letrec {
                   go2 :: [GHC.Types.Char] -> [(GHC.Types.Char, GHC.Types.Int)]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [GHC.Types.Char]) ->
                     case ds of wild {
                       [] -> z
                       : y ys
                       -> GHC.Types.:
                            @ (GHC.Types.Char, GHC.Types.Int)
                            (y, ww1)
                            (go2 ys) }
                 } in
                 go2 (Test.QuickCheck.Arbitrary.$fArbitraryChar_$cshrink ww)) -}
bd7f5e7f378b9e7b86155392ef9afa18
  $wlvl3 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Word#
    -> GHC.Prim.Word#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> [(Phone.Token, Phone.Presses)]
  {- Arity: 5, Strictness: <S,U><S,U><S,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Word#)
                   (ww2 :: GHC.Prim.Word#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#) ->
                 Test.QuickCheck.Gen.$wlistOf
                   @ (Phone.Token, Phone.Presses)
                   PhoneSpec.$s$fArbitrary(,)1
                     `cast`
                   (Sym (Test.QuickCheck.Gen.N:Gen[0]
                             <(GHC.Types.Char, GHC.Types.Int)>_R))
                   ww
                   ww1
                   ww2
                   ww3
                   ww4) -}
90971159fa0c8e4292084acb1a026310
  $wlvl4 ::
    GHC.Types.Char
    -> GHC.Types.Int -> [(GHC.Types.Char, GHC.Types.Int)]
  {- Arity: 2, Strictness: <L,U(U)><L,U(U)>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Char) (ww1 :: GHC.Types.Int) ->
                 let {
                   z :: [(GHC.Types.Char, GHC.Types.Int)]
                   = case ww1 of ww2 { GHC.Types.I# ww3 ->
                     letrec {
                       go2 :: [GHC.Types.Int] -> [(GHC.Types.Char, GHC.Types.Int)]
                         {- Arity: 1, Strictness: <S,1*U> -}
                       = \ (ds :: [GHC.Types.Int]) ->
                         case ds of wild {
                           [] -> GHC.Types.[] @ (GHC.Types.Char, GHC.Types.Int)
                           : y ys
                           -> GHC.Types.: @ (GHC.Types.Char, GHC.Types.Int) (ww, y) (go2 ys) }
                     } in
                     go2 (Test.QuickCheck.Arbitrary.$w$sshrinkIntegral ww3) }
                 } in
                 letrec {
                   go2 :: [GHC.Types.Char] -> [(GHC.Types.Char, GHC.Types.Int)]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [GHC.Types.Char]) ->
                     case ds of wild {
                       [] -> z
                       : y ys
                       -> GHC.Types.:
                            @ (GHC.Types.Char, GHC.Types.Int)
                            (y, ww1)
                            (go2 ys) }
                 } in
                 go2 (Test.QuickCheck.Arbitrary.$fArbitraryChar_$cshrink ww)) -}
172ab26ab55345dee58a852362e932b9
  $wlvl5 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Word#
    -> GHC.Prim.Word#
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> (# GHC.Types.Char, GHC.Types.Int #)
  {- Arity: 5, Strictness: <S,U><S,U><S,U><S,1*U><L,U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Word#)
                   (ww2 :: GHC.Prim.Word#)
                   (ww3 :: GHC.Prim.Int#)
                   (w :: GHC.Types.Int) ->
                 case System.Random.TF.Gen.$wtfGenSplit
                        ww
                        ww1
                        ww2
                        ww3 of ww7 { (#,#) ww8 ww9 ->
                 case ww9 of ww4 { System.Random.TF.Gen.TFGen ww5 ww6 ww10 ww11 ww12 ww13 ->
                 case System.Random.TF.Gen.$wtfGenSplit
                        ww5
                        ww6
                        ww10
                        ww11 of ww14 { (#,#) ww15 ww16 ->
                 (# Test.QuickCheck.Arbitrary.$fArbitraryChar_$carbitrary
                      `cast`
                    (Test.QuickCheck.Gen.N:Gen[0] <GHC.Types.Char>_R)
                      ww8 `cast` (Sym (Test.QuickCheck.Random.N:QCGen[0]))
                      w,
                    Test.QuickCheck.Arbitrary.$fArbitrary1IntMap_$sarbitrarySizedIntegral
                      ww15 `cast` (Sym (Test.QuickCheck.Random.N:QCGen[0]))
                      w #) } } }) -}
d564094f6bf8cc3c7b7f24c3044b798d
  btnsAllowed :: [Phone.Button]
  {- Unfolding: (Phone.tokenButtonize PhoneSpec.toksAllowed) -}
d8e448036ee09352b11958014f812bc9
  fngsAllowed :: [Phone.FingerMove]
  {- Unfolding: (Data.OldList.nubBy
                   @ Phone.FingerMove
                   PhoneSpec.main147
                   PhoneSpec.main146) -}
00898ccd79b0bf5d52845e5a6973edd3
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                PhoneSpec.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
4ea84dfc7268cf086687ab25871bd2f0
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Test.Hspec.Core.Runner.hspec2
                        Test.Hspec.Core.Options.defaultConfig
                        PhoneSpec.main2
                          `cast`
                        (Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                            <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                            <GHC.Types.IO>_R
                                            <()>_N))
                                  (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0] <()>_N) <()>_N)))
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Test.Hspec.Core.Runner.Summary ds ds2 ->
                 case ds2 of wild1 { GHC.Types.I# x ->
                 case x of wild2 {
                   DEFAULT -> System.Exit.exitFailure1 @ () ipv
                   0# -> (# ipv, GHC.Tuple.() #) } } } }) -}
beb3a8ecdec5a367754d08da560bf4f8
  main10 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   PhoneSpec.main59
                   PhoneSpec.main11) -}
d4bdcacab0b01d786948542f512c5f15
  main100 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Strictness: m1,
     Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   PhoneSpec.main136
                   PhoneSpec.main101) -}
90d691ea0e998efdf777ae3b4e346c42
  main101 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   PhoneSpec.main119
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   PhoneSpec.main102
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R) -}
582fd39bf24bbbf705f1e7cf86f92d8f
  main102 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   PhoneSpec.main103
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
12f438135f666dce1f23aa2b76ddd156
  main103 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   PhoneSpec.main104) -}
cd8981f70ea9851dd0ed0b83f275a535
  main104 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   PhoneSpec.main116
                   PhoneSpec.main109
                   GHC.Types.False
                   PhoneSpec.main105
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
11c6de7d2269a0d2ee9b13754b63db64
  main105 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   PhoneSpec.main106 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
811da26a41199a5650c427ec02ca1270
  main106 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Phone.mostPopularLetter
                        (GHC.CString.unpackCString#
                           PhoneSpec.main108) of wild1 { GHC.Types.C# y ->
                 case y of wild {
                   DEFAULT
                   -> case Test.HUnit.Lang.assertEqual_go
                             GHC.Show.$fShowBool1 of wild2 { () ->
                      case Test.HUnit.Lang.assertEqual_go
                             GHC.Show.$fShowBool3 of wild4 { () ->
                      PhoneSpec.main107 eta2 } }
                   'a'# -> (# eta2, GHC.Tuple.() #) } }) -}
8dd049901465ffe5c90c437f44143390
  main107 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <B,U>x -}
4fcf805af61d51539a31d01a11c10c9c
  main108 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ooppaaaaa lll"#) -}
2864179a9507bf9c67a985677ad6be42
  main109 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (Test.Hspec.Core.Tree.specItem13
                   PhoneSpec.main110) -}
ef9989f7d3b6cf26f2ae517aa65f970f
  main11 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   PhoneSpec.main12
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.Tree
                           (Test.Hspec.Core.Example.ActionWith ())
                           (Test.Hspec.Core.Tree.Item ())))) -}
32ddb055ca32b8f222af03d94f829553
  main110 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem11
                   Test.Hspec.Core.Tree.specItem3
                   PhoneSpec.main111) -}
8c7065ca5139065f2436945264c41314
  main111 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it1
                   PhoneSpec.main112) -}
f1f6a04c75b2c8ced57fbca7532b5707
  main112 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   PhoneSpec.main32
                   PhoneSpec.main113
                   GHC.Stack.Types.EmptyCallStack) -}
67668fc8e6d8157bfd96a6ee80bec003
  main113 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   PhoneSpec.main31
                   PhoneSpec.main30
                   PhoneSpec.main28
                   PhoneSpec.main115
                   PhoneSpec.main26
                   PhoneSpec.main115
                   PhoneSpec.main114) -}
920c51706862899d4f90a4e22a3a7110
  main114 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 72#) -}
d920d408ce7da441fd4d1f0845a29740
  main115 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 107#) -}
c5bf18ebe984bb798f88390309f45212
  main116 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   PhoneSpec.main37
                   PhoneSpec.main117) -}
b94440d66761eb0d0535d1d94916e26e
  main117 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# PhoneSpec.main118) -}
d266aee038ccaa029d1225768b71ab0a
  main118 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("eturns most popular letter despite its position in the string"#) -}
14cb92b82d06bc0efd04db6ce8a9711d
  main119 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   PhoneSpec.main120
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
d40ec6f56b5ae674b261f9f3cf213558
  main12 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Strictness: m1,
     Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   PhoneSpec.main55
                   PhoneSpec.main13) -}
b252a0d89e1a8ac38c561ef461ea9806
  main120 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   PhoneSpec.main121) -}
89b6780a50a805e09ff5d843650f251c
  main121 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   PhoneSpec.main133
                   PhoneSpec.main126
                   GHC.Types.False
                   PhoneSpec.main122
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
168472b9362ab3151e3395b51515c744
  main122 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   PhoneSpec.main123 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
96634a2fa3d8b3e1ac854498633c55dc
  main123 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Phone.mostPopularLetter
                        (GHC.CString.unpackCString#
                           PhoneSpec.main125) of wild1 { GHC.Types.C# y ->
                 case y of wild {
                   DEFAULT
                   -> case Test.HUnit.Lang.assertEqual_go
                             GHC.Show.$fShowBool1 of wild2 { () ->
                      case Test.HUnit.Lang.assertEqual_go
                             GHC.Show.$fShowBool3 of wild4 { () ->
                      PhoneSpec.main124 eta2 } }
                   'h'# -> (# eta2, GHC.Tuple.() #) } }) -}
fe131b52486c50d56f722264c720a752
  main124 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <B,U>x -}
65c61bce06f2e7b4eabd078ace8b1578
  main125 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("hi there how are you today?"#) -}
d19184a09c9cbc6553e4db352ef83694
  main126 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (Test.Hspec.Core.Tree.specItem13
                   PhoneSpec.main127) -}
2ee29c705634752790e1e5d6c0f48be9
  main127 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem11
                   Test.Hspec.Core.Tree.specItem3
                   PhoneSpec.main128) -}
59eece620551d5f2a5dff48886eb8b5e
  main128 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it1
                   PhoneSpec.main129) -}
abc45386b4f736d01ef7a670d737cbf5
  main129 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   PhoneSpec.main32
                   PhoneSpec.main130
                   GHC.Stack.Types.EmptyCallStack) -}
9cc8306e13da7ff55dd40060a4e7ded5
  main13 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   PhoneSpec.main38
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   PhoneSpec.main14
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgProperty[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgProperty[0])))_R)_R])_R) -}
c59017c03767760af351d3488ed2ae61
  main130 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   PhoneSpec.main31
                   PhoneSpec.main30
                   PhoneSpec.main28
                   PhoneSpec.main132
                   PhoneSpec.main26
                   PhoneSpec.main132
                   PhoneSpec.main131) -}
9b7ac62deb9e53711148eefaed103ec3
  main131 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 65#) -}
d46dba436020d781bde9623feb8e97fb
  main132 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 103#) -}
95e4f23725d351228c42815b788678c9
  main133 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   PhoneSpec.main37
                   PhoneSpec.main134) -}
6167efe1ca025e20d0d440f665c8f54c
  main134 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# PhoneSpec.main135) -}
c7f55ec87b1f109f7e48f768463b1b55
  main135 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("eturns first letter that is most popular, despite ties"#) -}
a979675cea6779510c896324980e4dfa
  main136 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   PhoneSpec.main37
                   PhoneSpec.main137) -}
c3e1c0adb05affdcad779d755b29e8ed
  main137 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# PhoneSpec.main138) -}
af70e54e6955b5fcd6c7b49582cc304c
  main138 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("eturns most popular letter"#) -}
64405496212a314480aeb9fb55efe608
  main139 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Strictness: m1,
     Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   PhoneSpec.main165
                   PhoneSpec.main140
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgProperty[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgProperty[0])))_R)_R])_R) -}
e29d881dcfb6b6781a5ec516349b04a0
  main14 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   PhoneSpec.main15
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.QuickCheck.Property.Property)))) -}
d9f10a8f3a3fa26cfbc4cd499848a999
  main140 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   PhoneSpec.main141
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.QuickCheck.Property.Property)))) -}
f29c1c3a805a0bd85dcbc88f8af6fa95
  main141 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   PhoneSpec.main142) -}
8edc07bb19d515f422dcf1480dd20228
  main142 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
                   PhoneSpec.main161
                   PhoneSpec.main154
                   GHC.Types.False
                   PhoneSpec.main143
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
ca61a0b1f6d4722168b810b6a09bf1cd
  main143 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.QuickCheck.Property.Property
                   Test.Hspec.Core.Example.$fExampleProperty1
                     `cast`
                   (Trans
                        (<Test.QuickCheck.Property.Property>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <Test.Hspec.Core.Example.ActionWith
                                 (Test.Hspec.Core.Example.Arg
                                    (() -> Test.QuickCheck.Property.Property))
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Trans
                             (<Test.QuickCheck.Property.Property>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgProperty[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback
                                    -> GHC.Types.IO Test.Hspec.Core.Example.Result>_R)
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.QuickCheck.Property.Property>_N))))
                   PhoneSpec.main144
                     `cast`
                   (Nth:3
                        (Trans
                             (Nth:3
                                  (Nth:3
                                       (Nth:3
                                            (Trans
                                                 (<Test.QuickCheck.Arbitrary.Arbitrary
                                                     [[Phone.FingerMove]]>_R
                                                  ->_R <GHC.Show.Show [[Phone.FingerMove]]>_R
                                                  ->_R <Test.QuickCheck.Property.Testable
                                                          GHC.Types.Bool>_R
                                                  ->_R <[[Phone.FingerMove]] -> GHC.Types.Bool>_R
                                                  ->_R Trans
                                                           (Sym (Test.QuickCheck.Gen.N:Gen[0]
                                                                     (Test.QuickCheck.Property.N:Prop[0])))
                                                           (Sym (Test.QuickCheck.Property.N:Property[0])))
                                                 (<Test.QuickCheck.Arbitrary.Arbitrary
                                                     [[Phone.FingerMove]]>_R
                                                  ->_R <GHC.Show.Show [[Phone.FingerMove]]>_R
                                                  ->_R <Test.QuickCheck.Property.Testable
                                                          GHC.Types.Bool>_R
                                                  ->_R Sym (Test.QuickCheck.Property.N:Testable[0]
                                                                <[[Phone.FingerMove]]
                                                                 -> GHC.Types.Bool>_N))))))
                             (Test.QuickCheck.Property.N:Testable[0]
                                  <[[Phone.FingerMove]] -> GHC.Types.Bool>_N)))) -}
216af233d630ebe77d6be160a42484c8
  main144 ::
    Test.QuickCheck.Random.QCGen
    -> GHC.Types.Int
    -> Test.QuickCheck.Property.Rose Test.QuickCheck.Property.Result
  {- Arity: 2, Strictness: <S(SSSSLL),1*U(U,U,U,1*U,A,A)><L,U>,
     Unfolding: (\ (eta :: Test.QuickCheck.Random.QCGen)
                   (eta1 :: GHC.Types.Int) ->
                 case eta
                        `cast`
                      (Test.QuickCheck.Random.N:QCGen[0]) of ww { System.Random.TF.Gen.TFGen ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Test.QuickCheck.Property.$wforAllShrink
                   @ [[Phone.FingerMove]]
                   @ GHC.Types.Bool
                   PhoneSpec.$s$fTestable(->)3
                   Test.QuickCheck.Property.$fTestableBool_$cproperty
                     `cast`
                   (Trans
                        (Sym (Test.QuickCheck.Property.N:Testable[0] <GHC.Types.Bool>_N))
                        (Nth:2
                             (Nth:3
                                  (Nth:3
                                       (Trans
                                            (<Test.QuickCheck.Arbitrary.Arbitrary
                                                [[Phone.FingerMove]]>_R
                                             ->_R <GHC.Show.Show [[Phone.FingerMove]]>_R
                                             ->_R <Test.QuickCheck.Property.Testable
                                                     GHC.Types.Bool>_R
                                             ->_R Test.QuickCheck.Property.N:Testable[0]
                                                      <[[Phone.FingerMove]] -> GHC.Types.Bool>_N)
                                            (<Test.QuickCheck.Arbitrary.Arbitrary
                                                [[Phone.FingerMove]]>_R
                                             ->_R <GHC.Show.Show [[Phone.FingerMove]]>_R
                                             ->_R <Test.QuickCheck.Property.Testable
                                                     GHC.Types.Bool>_R
                                             ->_R <[[Phone.FingerMove]] -> GHC.Types.Bool>_R
                                             ->_R Trans
                                                      (Test.QuickCheck.Property.N:Property[0])
                                                      (Test.QuickCheck.Gen.N:Gen[0]
                                                           (Test.QuickCheck.Property.N:Prop[0]))))))))
                   PhoneSpec.main152
                     `cast`
                   (Sym (Test.QuickCheck.Gen.N:Gen[0] <[[Phone.FingerMove]]>_R))
                   PhoneSpec.main149
                   PhoneSpec.main145
                   ww1
                   ww2
                   ww3
                   ww4
                   eta1 }) -}
8dcd08f952b99d21f18ab89d9b75dd73
  main145 :: [[Phone.FingerMove]] -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (fngList :: [[Phone.FingerMove]]) ->
                 let {
                   lvl57 :: GHC.Types.Bool <join 0>
                   = GHC.Classes.$fEq[]_$c==
                       @ [Phone.FingerMove]
                       PhoneSpec.$s$fEq[]
                       (GHC.Base.map
                          @ [Phone.FingerMove]
                          @ [Phone.FingerMove]
                          PhoneSpec.main148
                          fngList)
                       fngList
                 } in
                 letrec {
                   go2 :: [[Phone.FingerMove]] -> GHC.Types.Bool
                     <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [[Phone.FingerMove]]) ->
                     case ds of wild {
                       [] -> lvl57
                       : y ys
                       -> let {
                            y1 :: GHC.Types.Bool <join 0> = go2 ys
                          } in
                          letrec {
                            go3 :: [Phone.FingerMove] -> GHC.Types.Bool
                              <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                            = \ (ds1 :: [Phone.FingerMove]) ->
                              case ds1 of wild1 {
                                [] -> y1
                                : y2 ys1
                                -> case GHC.List.elem
                                          @ Phone.FingerMove
                                          PhoneSpec.$s$fEq(,)
                                          y2
                                          PhoneSpec.fngsAllowed of wild2 {
                                     GHC.Types.False -> GHC.Types.True GHC.Types.True -> go3 ys1 } }
                          } in
                          go3 y }
                 } in
                 go2 fngList) -}
c0a3859548c72b35be975f136d7bf08b
  main146 :: [Phone.FingerMove]
  {- Unfolding: (Phone.buttonFingerize PhoneSpec.btnsAllowed) -}
71f7d5bd20e67982c25478cc80265ba1
  main147 ::
    (GHC.Types.Char, GHC.Types.Int)
    -> (GHC.Types.Char, GHC.Types.Int) -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)L),1*U(1*U(U),1*U(U))><S(S(S)L),1*U(1*U(U),1*U(U))>,
     Unfolding: (\ (w2 :: (GHC.Types.Char, GHC.Types.Int))
                   (w3 :: (GHC.Types.Char, GHC.Types.Int))[OneShot] ->
                 case w2 of ww { (,) ww1 ww2 ->
                 case w3 of ww3 { (,) ww4 ww5 ->
                 case ww1 of wild { GHC.Types.C# x ->
                 case ww4 of wild1 { GHC.Types.C# y ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqChar# x y) of wild2 {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True -> GHC.Classes.eqInt ww2 ww5 } } } } }) -}
45920d7df87dc32010ec839db113f911
  main148 :: [Phone.FingerMove] -> [Phone.FingerMove]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: [Phone.FingerMove]) ->
                 Phone.buttonFingerize
                   (Phone.tokenButtonize
                      (Phone.buttonTokenize (Phone.fingerButtonize x)))) -}
f74b76cce22afab506a7588545221850
  main149 :: [[Phone.FingerMove]] -> [[[Phone.FingerMove]]]
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: [[Phone.FingerMove]]) ->
                 Test.QuickCheck.Arbitrary.shrinkList
                   @ [Phone.FingerMove]
                   PhoneSpec.main150
                   eta) -}
19ff179c76d08bfe308867c1279d7c9b
  main15 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   PhoneSpec.main16) -}
80b273b400ccfa1a1ff121bb771a193d
  main150 ::
    [(Phone.Token, Phone.Presses)] -> [[(Phone.Token, Phone.Presses)]]
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: [(Phone.Token, Phone.Presses)]) ->
                 Test.QuickCheck.Arbitrary.shrinkList
                   @ (Phone.Token, Phone.Presses)
                   PhoneSpec.main151
                   eta) -}
fd163fe45d4b17d16a96933dd1c2c7e4
  main151 ::
    (GHC.Types.Char, GHC.Types.Int)
    -> [(GHC.Types.Char, GHC.Types.Int)]
  {- Arity: 1, Strictness: <S,1*U(U(U),U(U))>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Types.Char, GHC.Types.Int)) ->
                 case w of ww { (,) ww1 ww2 -> PhoneSpec.$wlvl ww1 ww2 }) -}
e7f66106e6eb5179d54a7c59a0920889
  main152 ::
    Test.QuickCheck.Random.QCGen
    -> GHC.Types.Int -> [[Phone.FingerMove]]
  {- Arity: 2,
     Strictness: <S(SSSSLL),1*U(U,U,U,1*U,A,A)><S(S),1*U(U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Test.QuickCheck.Random.QCGen) (w1 :: GHC.Types.Int) ->
                 case w `cast`
                      (Test.QuickCheck.Random.N:QCGen[0]) of ww { System.Random.TF.Gen.TFGen ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1 of ww7 { GHC.Types.I# ww8 ->
                 PhoneSpec.$wlvl1 ww1 ww2 ww3 ww4 ww8 } }) -}
f5fe3aff15a558c4c9692aad5f55356b
  main153 ::
    Test.QuickCheck.Random.QCGen
    -> GHC.Types.Int -> [(Phone.Token, Phone.Presses)]
  {- Arity: 2,
     Strictness: <S(SSSSLL),1*U(U,U,U,1*U,A,A)><S(S),1*U(U)>,
     Unfolding: (\ (w1 :: Test.QuickCheck.Random.QCGen)
                   (w2 :: GHC.Types.Int)[OneShot] ->
                 case w1
                        `cast`
                      (Test.QuickCheck.Random.N:QCGen[0]) of ww { System.Random.TF.Gen.TFGen ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w2 of ww7 { GHC.Types.I# ww8 ->
                 Test.QuickCheck.Gen.$wlistOf
                   @ (Phone.Token, Phone.Presses)
                   PhoneSpec.$s$fArbitrary(,)1
                     `cast`
                   (Sym (Test.QuickCheck.Gen.N:Gen[0]
                             <(GHC.Types.Char, GHC.Types.Int)>_R))
                   ww1
                   ww2
                   ww3
                   ww4
                   ww8 } }) -}
246a76c6c0de001506872a1f995be311
  main154 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (Test.Hspec.Core.Tree.specItem13
                   PhoneSpec.main155) -}
bff36219198f40808197a4f8db2b7382
  main155 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem11
                   Test.Hspec.Core.Tree.specItem3
                   PhoneSpec.main156) -}
561b29bb5b226252cdaa8f5e77bfe002
  main156 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it1
                   PhoneSpec.main157) -}
99c97bc5b6c4eb74f776ade61ad90413
  main157 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   PhoneSpec.main32
                   PhoneSpec.main158
                   GHC.Stack.Types.EmptyCallStack) -}
16696bbdff7a77d93e522bfdec4bfd39
  main158 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   PhoneSpec.main31
                   PhoneSpec.main30
                   PhoneSpec.main28
                   PhoneSpec.main160
                   PhoneSpec.main26
                   PhoneSpec.main160
                   PhoneSpec.main159) -}
1281140db7bff1978d52662957b6977d
  main159 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 43#) -}
6e5a21a63ccb7ce59c6461a2a25dca83
  main16 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
                   PhoneSpec.main34
                   PhoneSpec.main20
                   GHC.Types.False
                   PhoneSpec.main17
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
0662c8d9371a29124814411c0482102b
  main160 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 92#) -}
49134a6138f906b4aacbb24baff50ba0
  main161 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   PhoneSpec.main164
                   PhoneSpec.main162) -}
6fd8bb793cc33b0faccfd1de02d0e78a
  main162 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# PhoneSpec.main163) -}
256c53451c53681b0a1795b5d0b5472b
  main163 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("ecrypt -> encrypt should be true"#) -}
cb4e6ffd1dedeb4ff498a9dc0f3ecdd6
  main164 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'd'#) -}
3988e22ec0b0207e3a40f899459978e4
  main165 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   PhoneSpec.main168
                   PhoneSpec.main166) -}
63ed54474162d0e02c6686ab722cacd2
  main166 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# PhoneSpec.main167) -}
8388e056e9cd8ef76275ffaee7637193
  main167 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("ncrypt and decrypt should be inverses"#) -}
fdfd12a6ef1378d6c73f8a1db1774283
  main168 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'e'#) -}
a8a8c6d7c370876a2980e14a5620f55f
  main169 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Strictness: m1,
     Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   PhoneSpec.main207
                   PhoneSpec.main170) -}
8b99143190a048ddf6e93db209ce16c6
  main17 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.QuickCheck.Property.Property
                   Test.Hspec.Core.Example.$fExampleProperty1
                     `cast`
                   (Trans
                        (<Test.QuickCheck.Property.Property>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <Test.Hspec.Core.Example.ActionWith
                                 (Test.Hspec.Core.Example.Arg
                                    (() -> Test.QuickCheck.Property.Property))
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Trans
                             (<Test.QuickCheck.Property.Property>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgProperty[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback
                                    -> GHC.Types.IO Test.Hspec.Core.Example.Result>_R)
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.QuickCheck.Property.Property>_N))))
                   PhoneSpec.main18
                     `cast`
                   (Nth:3
                        (Trans
                             (Nth:3
                                  (Nth:3
                                       (Nth:3
                                            (Trans
                                                 (<Test.QuickCheck.Arbitrary.Arbitrary
                                                     GHC.Types.Char>_R
                                                  ->_R <GHC.Show.Show GHC.Types.Char>_R
                                                  ->_R <Test.QuickCheck.Property.Testable
                                                          GHC.Types.Bool>_R
                                                  ->_R <GHC.Types.Char -> GHC.Types.Bool>_R
                                                  ->_R Trans
                                                           (Sym (Test.QuickCheck.Gen.N:Gen[0]
                                                                     (Test.QuickCheck.Property.N:Prop[0])))
                                                           (Sym (Test.QuickCheck.Property.N:Property[0])))
                                                 (<Test.QuickCheck.Arbitrary.Arbitrary
                                                     GHC.Types.Char>_R
                                                  ->_R <GHC.Show.Show GHC.Types.Char>_R
                                                  ->_R <Test.QuickCheck.Property.Testable
                                                          GHC.Types.Bool>_R
                                                  ->_R Sym (Test.QuickCheck.Property.N:Testable[0]
                                                                <GHC.Types.Char
                                                                 -> GHC.Types.Bool>_N))))))
                             (Test.QuickCheck.Property.N:Testable[0]
                                  <Phone.Token -> GHC.Types.Bool>_N)))) -}
0a465e47aa0ea8ef5550e22ad53dd3a7
  main170 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   PhoneSpec.main189
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgProperty[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgProperty[0])))_R)_R])_R
                   PhoneSpec.main171
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgProperty[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgProperty[0])))_R)_R])_R) -}
0b37e32592aa79a05a7e875c0da5c49b
  main171 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   PhoneSpec.main172
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.QuickCheck.Property.Property)))) -}
6e2dc81e60de44d8ffd5b03179f44c82
  main172 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   PhoneSpec.main173) -}
9bd3839ec22e53656afff84562cd30a2
  main173 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
                   PhoneSpec.main185
                   PhoneSpec.main178
                   GHC.Types.False
                   PhoneSpec.main174
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
176a9c682c388134a30e036e94934619
  main174 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.QuickCheck.Property.Property
                   Test.Hspec.Core.Example.$fExampleProperty1
                     `cast`
                   (Trans
                        (<Test.QuickCheck.Property.Property>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <Test.Hspec.Core.Example.ActionWith
                                 (Test.Hspec.Core.Example.Arg
                                    (() -> Test.QuickCheck.Property.Property))
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Trans
                             (<Test.QuickCheck.Property.Property>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgProperty[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback
                                    -> GHC.Types.IO Test.Hspec.Core.Example.Result>_R)
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.QuickCheck.Property.Property>_N))))
                   PhoneSpec.main175
                     `cast`
                   (Nth:3
                        (Trans
                             (Nth:3
                                  (Nth:3
                                       (Nth:3
                                            (Trans
                                                 (<Test.QuickCheck.Arbitrary.Arbitrary
                                                     [Phone.Button]>_R
                                                  ->_R <GHC.Show.Show [Phone.Button]>_R
                                                  ->_R <Test.QuickCheck.Property.Testable
                                                          GHC.Types.Bool>_R
                                                  ->_R <[Phone.Button] -> GHC.Types.Bool>_R
                                                  ->_R Trans
                                                           (Sym (Test.QuickCheck.Gen.N:Gen[0]
                                                                     (Test.QuickCheck.Property.N:Prop[0])))
                                                           (Sym (Test.QuickCheck.Property.N:Property[0])))
                                                 (<Test.QuickCheck.Arbitrary.Arbitrary
                                                     [Phone.Button]>_R
                                                  ->_R <GHC.Show.Show [Phone.Button]>_R
                                                  ->_R <Test.QuickCheck.Property.Testable
                                                          GHC.Types.Bool>_R
                                                  ->_R Sym (Test.QuickCheck.Property.N:Testable[0]
                                                                <[Phone.Button]
                                                                 -> GHC.Types.Bool>_N))))))
                             (Test.QuickCheck.Property.N:Testable[0]
                                  <[Phone.Button] -> GHC.Types.Bool>_N)))) -}
696aaed495b1a0bafb5f784277f6593b
  main175 ::
    Test.QuickCheck.Random.QCGen
    -> GHC.Types.Int
    -> Test.QuickCheck.Property.Rose Test.QuickCheck.Property.Result
  {- Arity: 2, Strictness: <S(SSSSLL),1*U(U,U,U,1*U,A,A)><L,U>,
     Unfolding: (\ (eta :: Test.QuickCheck.Random.QCGen)
                   (eta1 :: GHC.Types.Int) ->
                 case eta
                        `cast`
                      (Test.QuickCheck.Random.N:QCGen[0]) of ww { System.Random.TF.Gen.TFGen ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Test.QuickCheck.Property.$wforAllShrink
                   @ [Phone.Button]
                   @ GHC.Types.Bool
                   PhoneSpec.$s$fShow[]1
                   Test.QuickCheck.Property.$fTestableBool_$cproperty
                     `cast`
                   (Trans
                        (Sym (Test.QuickCheck.Property.N:Testable[0] <GHC.Types.Bool>_N))
                        (Nth:2
                             (Nth:3
                                  (Nth:3
                                       (Trans
                                            (<Test.QuickCheck.Arbitrary.Arbitrary [Phone.Button]>_R
                                             ->_R <GHC.Show.Show [Phone.Button]>_R
                                             ->_R <Test.QuickCheck.Property.Testable
                                                     GHC.Types.Bool>_R
                                             ->_R Test.QuickCheck.Property.N:Testable[0]
                                                      <[Phone.Button] -> GHC.Types.Bool>_N)
                                            (<Test.QuickCheck.Arbitrary.Arbitrary [Phone.Button]>_R
                                             ->_R <GHC.Show.Show [Phone.Button]>_R
                                             ->_R <Test.QuickCheck.Property.Testable
                                                     GHC.Types.Bool>_R
                                             ->_R <[Phone.Button] -> GHC.Types.Bool>_R
                                             ->_R Trans
                                                      (Test.QuickCheck.Property.N:Property[0])
                                                      (Test.QuickCheck.Gen.N:Gen[0]
                                                           (Test.QuickCheck.Property.N:Prop[0]))))))))
                   PhoneSpec.main177
                     `cast`
                   (Sym (Test.QuickCheck.Gen.N:Gen[0] <[Phone.Button]>_R))
                   PhoneSpec.main176
                   PhoneSpec.main_f
                   ww1
                   ww2
                   ww3
                   ww4
                   eta1 }) -}
d6efe8de202845000a762c54a7f840d8
  main176 :: [Phone.Button] -> [[Phone.Button]]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: [Phone.Button]) ->
                 Test.QuickCheck.Arbitrary.shrinkList
                   @ Phone.Button
                   PhoneSpec.$fArbitraryButton_$cshrink
                   eta) -}
f00a1ebea059eef7a2630f17cc5ec597
  main177 ::
    Test.QuickCheck.Random.QCGen -> GHC.Types.Int -> [Phone.Button]
  {- Arity: 2,
     Strictness: <S(SSSSLL),1*U(U,U,U,1*U,A,A)><S(S),1*U(U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (w1 :: Test.QuickCheck.Random.QCGen) (w2 :: GHC.Types.Int) ->
                 case w1
                        `cast`
                      (Test.QuickCheck.Random.N:QCGen[0]) of ww { System.Random.TF.Gen.TFGen ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w2 of ww7 { GHC.Types.I# ww8 ->
                 Test.QuickCheck.Gen.$wlistOf
                   @ Phone.Button
                   PhoneSpec.$fArbitraryButton_$carbitrary
                   ww1
                   ww2
                   ww3
                   ww4
                   ww8 } }) -}
08e883bb8c151391c5cd32d690a4c651
  main178 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (Test.Hspec.Core.Tree.specItem13
                   PhoneSpec.main179) -}
59ca13bc78b230e89d27b7688a8d381c
  main179 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem11
                   Test.Hspec.Core.Tree.specItem3
                   PhoneSpec.main180) -}
fb167916775e68e6fdaf64e30e757ea8
  main18 ::
    Test.QuickCheck.Random.QCGen
    -> GHC.Types.Int
    -> Test.QuickCheck.Property.Rose Test.QuickCheck.Property.Result
  {- Arity: 2, Strictness: <S(SSSSLL),1*U(U,U,U,1*U,A,A)><L,U>,
     Unfolding: (\ (eta :: Test.QuickCheck.Random.QCGen)
                   (eta1 :: GHC.Types.Int) ->
                 case eta
                        `cast`
                      (Test.QuickCheck.Random.N:QCGen[0]) of ww { System.Random.TF.Gen.TFGen ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Test.QuickCheck.Property.$wforAllShrink
                   @ GHC.Types.Char
                   @ GHC.Types.Bool
                   GHC.Show.$fShowChar
                   Test.QuickCheck.Property.$fTestableBool_$cproperty
                     `cast`
                   (Trans
                        (Sym (Test.QuickCheck.Property.N:Testable[0] <GHC.Types.Bool>_N))
                        (Nth:2
                             (Nth:3
                                  (Nth:3
                                       (Trans
                                            (<Test.QuickCheck.Arbitrary.Arbitrary GHC.Types.Char>_R
                                             ->_R <GHC.Show.Show GHC.Types.Char>_R
                                             ->_R <Test.QuickCheck.Property.Testable
                                                     GHC.Types.Bool>_R
                                             ->_R Test.QuickCheck.Property.N:Testable[0]
                                                      <GHC.Types.Char -> GHC.Types.Bool>_N)
                                            (<Test.QuickCheck.Arbitrary.Arbitrary GHC.Types.Char>_R
                                             ->_R <GHC.Show.Show GHC.Types.Char>_R
                                             ->_R <Test.QuickCheck.Property.Testable
                                                     GHC.Types.Bool>_R
                                             ->_R <GHC.Types.Char -> GHC.Types.Bool>_R
                                             ->_R Trans
                                                      (Test.QuickCheck.Property.N:Property[0])
                                                      (Test.QuickCheck.Gen.N:Gen[0]
                                                           (Test.QuickCheck.Property.N:Prop[0]))))))))
                   Test.QuickCheck.Arbitrary.$fArbitraryChar_$carbitrary
                   Test.QuickCheck.Arbitrary.$fArbitraryChar_$cshrink
                   PhoneSpec.main19
                   ww1
                   ww2
                   ww3
                   ww4
                   eta1 }) -}
850f318d4c7b19b4c391ede92ad9ca45
  main180 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it1
                   PhoneSpec.main181) -}
d02f8cba6812e1bab9ff8ca2fa5687eb
  main181 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   PhoneSpec.main32
                   PhoneSpec.main182
                   GHC.Stack.Types.EmptyCallStack) -}
27dea75336a9f54a41d1c97d49e8d88f
  main182 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   PhoneSpec.main31
                   PhoneSpec.main30
                   PhoneSpec.main28
                   PhoneSpec.main184
                   PhoneSpec.main26
                   PhoneSpec.main184
                   PhoneSpec.main183) -}
76ed63abc0c013d7557b9ed037f8a760
  main183 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 51#) -}
4f621a309d4bf366543cf4096a597b41
  main184 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 79#) -}
717ca459e21bf963f648ade21478d912
  main185 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   PhoneSpec.main188
                   PhoneSpec.main186) -}
ceb06de959b42e4f37a14a5a5df09a36
  main186 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# PhoneSpec.main187) -}
c87360d5863164b0f7e11b3ddb859dc2
  main187 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("utton -> finger -> button should be true"#) -}
87262872c9d535b791fdf78e338d2ed3
  main188 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'b'#) -}
d041cc5b766736990bd6d9424a70184c
  main189 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   PhoneSpec.main190
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.QuickCheck.Property.Property)))) -}
c25b325e7623541cb7b531614bab8109
  main19 :: Phone.Token -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Phone.Token) ->
                 case w of ww { GHC.Types.C# ww1 -> PhoneSpec.$wf ww1 }) -}
105b0a5d9bc38d339bf4aad3cca812d0
  main190 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   PhoneSpec.main191) -}
6721ed57ef1a76b70bf8b02d93017d49
  main191 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
                   PhoneSpec.main203
                   PhoneSpec.main197
                   GHC.Types.False
                   PhoneSpec.main192
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
81944f36413f15fec7700078aea732c2
  main192 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.QuickCheck.Property.Property
                   Test.Hspec.Core.Example.$fExampleProperty1
                     `cast`
                   (Trans
                        (<Test.QuickCheck.Property.Property>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <Test.Hspec.Core.Example.ActionWith
                                 (Test.Hspec.Core.Example.Arg
                                    (() -> Test.QuickCheck.Property.Property))
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Trans
                             (<Test.QuickCheck.Property.Property>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgProperty[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback
                                    -> GHC.Types.IO Test.Hspec.Core.Example.Result>_R)
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.QuickCheck.Property.Property>_N))))
                   PhoneSpec.main193
                     `cast`
                   (Nth:3
                        (Trans
                             (Nth:3
                                  (Nth:3
                                       (Nth:3
                                            (Trans
                                                 (<Test.QuickCheck.Arbitrary.Arbitrary
                                                     [Phone.FingerMove]>_R
                                                  ->_R <GHC.Show.Show [Phone.FingerMove]>_R
                                                  ->_R <Test.QuickCheck.Property.Testable
                                                          GHC.Types.Bool>_R
                                                  ->_R <[Phone.FingerMove] -> GHC.Types.Bool>_R
                                                  ->_R Trans
                                                           (Sym (Test.QuickCheck.Gen.N:Gen[0]
                                                                     (Test.QuickCheck.Property.N:Prop[0])))
                                                           (Sym (Test.QuickCheck.Property.N:Property[0])))
                                                 (<Test.QuickCheck.Arbitrary.Arbitrary
                                                     [Phone.FingerMove]>_R
                                                  ->_R <GHC.Show.Show [Phone.FingerMove]>_R
                                                  ->_R <Test.QuickCheck.Property.Testable
                                                          GHC.Types.Bool>_R
                                                  ->_R Sym (Test.QuickCheck.Property.N:Testable[0]
                                                                <[Phone.FingerMove]
                                                                 -> GHC.Types.Bool>_N))))))
                             (Test.QuickCheck.Property.N:Testable[0]
                                  <[Phone.FingerMove] -> GHC.Types.Bool>_N)))) -}
aa9d56f36719b350146c63608ec266cf
  main193 ::
    Test.QuickCheck.Random.QCGen
    -> GHC.Types.Int
    -> Test.QuickCheck.Property.Rose Test.QuickCheck.Property.Result
  {- Arity: 2, Strictness: <S(SSSSLL),1*U(U,U,U,1*U,A,A)><L,U>,
     Unfolding: (\ (eta :: Test.QuickCheck.Random.QCGen)
                   (eta1 :: GHC.Types.Int) ->
                 case eta
                        `cast`
                      (Test.QuickCheck.Random.N:QCGen[0]) of ww { System.Random.TF.Gen.TFGen ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Test.QuickCheck.Property.$wforAllShrink
                   @ [Phone.FingerMove]
                   @ GHC.Types.Bool
                   PhoneSpec.$s$fShow[]
                   Test.QuickCheck.Property.$fTestableBool_$cproperty
                     `cast`
                   (Trans
                        (Sym (Test.QuickCheck.Property.N:Testable[0] <GHC.Types.Bool>_N))
                        (Nth:2
                             (Nth:3
                                  (Nth:3
                                       (Trans
                                            (<Test.QuickCheck.Arbitrary.Arbitrary
                                                [Phone.FingerMove]>_R
                                             ->_R <GHC.Show.Show [Phone.FingerMove]>_R
                                             ->_R <Test.QuickCheck.Property.Testable
                                                     GHC.Types.Bool>_R
                                             ->_R Test.QuickCheck.Property.N:Testable[0]
                                                      <[Phone.FingerMove] -> GHC.Types.Bool>_N)
                                            (<Test.QuickCheck.Arbitrary.Arbitrary
                                                [Phone.FingerMove]>_R
                                             ->_R <GHC.Show.Show [Phone.FingerMove]>_R
                                             ->_R <Test.QuickCheck.Property.Testable
                                                     GHC.Types.Bool>_R
                                             ->_R <[Phone.FingerMove] -> GHC.Types.Bool>_R
                                             ->_R Trans
                                                      (Test.QuickCheck.Property.N:Property[0])
                                                      (Test.QuickCheck.Gen.N:Gen[0]
                                                           (Test.QuickCheck.Property.N:Prop[0]))))))))
                   PhoneSpec.main196
                     `cast`
                   (Sym (Test.QuickCheck.Gen.N:Gen[0]
                             <[(Phone.Token, Phone.Presses)]>_R))
                   PhoneSpec.main194
                   PhoneSpec.main_f1
                   ww1
                   ww2
                   ww3
                   ww4
                   eta1 }) -}
46e777ff60009e7e563adf14c37c1ae3
  main194 ::
    [(Phone.Token, Phone.Presses)] -> [[(Phone.Token, Phone.Presses)]]
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: [(Phone.Token, Phone.Presses)]) ->
                 Test.QuickCheck.Arbitrary.shrinkList
                   @ (Phone.Token, Phone.Presses)
                   PhoneSpec.main195
                   eta) -}
e6859eab3de20a86fb21bd8cb0178d5e
  main195 ::
    (GHC.Types.Char, GHC.Types.Int)
    -> [(GHC.Types.Char, GHC.Types.Int)]
  {- Arity: 1, Strictness: <S,1*U(U(U),U(U))>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Types.Char, GHC.Types.Int)) ->
                 case w of ww { (,) ww1 ww2 -> PhoneSpec.$wlvl2 ww1 ww2 }) -}
274df8f95fec0a4c039b8efeb5dc234d
  main196 ::
    Test.QuickCheck.Random.QCGen
    -> GHC.Types.Int -> [(Phone.Token, Phone.Presses)]
  {- Arity: 2,
     Strictness: <S(SSSSLL),1*U(U,U,U,1*U,A,A)><S(S),1*U(U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Test.QuickCheck.Random.QCGen) (w1 :: GHC.Types.Int) ->
                 case w `cast`
                      (Test.QuickCheck.Random.N:QCGen[0]) of ww { System.Random.TF.Gen.TFGen ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1 of ww7 { GHC.Types.I# ww8 ->
                 PhoneSpec.$wlvl3 ww1 ww2 ww3 ww4 ww8 } }) -}
01f7250e28fb1cfe6197a35423cda973
  main197 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (Test.Hspec.Core.Tree.specItem13
                   PhoneSpec.main198) -}
00d49e5a12a84d41dd397e2b8e5f16db
  main198 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem11
                   Test.Hspec.Core.Tree.specItem3
                   PhoneSpec.main199) -}
c001bfaf5bda65a8e0cb937ca8018111
  main199 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it1
                   PhoneSpec.main200) -}
3654a857bdf3b7172de964266a443ab3
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# s, PhoneSpec.main3 #)) -}
5ab68c794e46aa17a2e0fd6f6dfd99ae
  main20 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (Test.Hspec.Core.Tree.specItem13 PhoneSpec.main21) -}
ca93d8b503ab20950c9b0cb3b8407ca6
  main200 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   PhoneSpec.main32
                   PhoneSpec.main201
                   GHC.Stack.Types.EmptyCallStack) -}
d4e061187309e292f5806b4d19ae80d0
  main201 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   PhoneSpec.main31
                   PhoneSpec.main30
                   PhoneSpec.main28
                   PhoneSpec.main202
                   PhoneSpec.main26
                   PhoneSpec.main202
                   PhoneSpec.main183) -}
53446068f94c47099beb2bdb219a09ea
  main202 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 73#) -}
aa8d4966eec75a910a784b3a0cc8deaa
  main203 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   PhoneSpec.main206
                   PhoneSpec.main204) -}
a9537af924fa752ba21c13f6d2ec9c22
  main204 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# PhoneSpec.main205) -}
0f96497b5dc0058eb7b1fa87a90bd47f
  main205 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("inger -> button -> finger should be true"#) -}
320a1d88562cd9d5e73b3bcb72fac8f2
  main206 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'f'#) -}
0272cbe2730bc3ff7639caa9a6439d2e
  main207 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   PhoneSpec.main206
                   PhoneSpec.main208) -}
cdcd7062472ec04235a0edfda64e330e
  main208 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# PhoneSpec.main209) -}
c825ffd53f0bcba35768c16e23be8a50
  main209 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("ingerButtonize and buttonFingerize should be inverses"#) -}
6dbc4f106f169260ec19fac1b9fdab94
  main21 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem11
                   Test.Hspec.Core.Tree.specItem3
                   PhoneSpec.main22) -}
8e80e2ff5382b053b30eceb4bbcc93aa
  main210 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Strictness: m1,
     Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   PhoneSpec.main244
                   PhoneSpec.main211) -}
a8a0f5b5edeb50ffd8ee120af4249986
  main211 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   PhoneSpec.main230
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgProperty[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgProperty[0])))_R)_R])_R
                   PhoneSpec.main212
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgProperty[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgProperty[0])))_R)_R])_R) -}
ccda1e5d0e2bc4fddb86f982dca87a82
  main212 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   PhoneSpec.main213
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.QuickCheck.Property.Property)))) -}
b9290e499f105e1f53cd8569a46883e9
  main213 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   PhoneSpec.main214) -}
eba5f9129986793c2631fbd5176e9f24
  main214 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
                   PhoneSpec.main226
                   PhoneSpec.main219
                   GHC.Types.False
                   PhoneSpec.main215
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
bd8e6c5af59d0312ee719ac07f08533c
  main215 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.QuickCheck.Property.Property
                   Test.Hspec.Core.Example.$fExampleProperty1
                     `cast`
                   (Trans
                        (<Test.QuickCheck.Property.Property>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <Test.Hspec.Core.Example.ActionWith
                                 (Test.Hspec.Core.Example.Arg
                                    (() -> Test.QuickCheck.Property.Property))
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Trans
                             (<Test.QuickCheck.Property.Property>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgProperty[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback
                                    -> GHC.Types.IO Test.Hspec.Core.Example.Result>_R)
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.QuickCheck.Property.Property>_N))))
                   PhoneSpec.main216
                     `cast`
                   (Nth:3
                        (Trans
                             (Nth:3
                                  (Nth:3
                                       (Nth:3
                                            (Trans
                                                 (<Test.QuickCheck.Arbitrary.Arbitrary
                                                     [GHC.Types.Char]>_R
                                                  ->_R <GHC.Show.Show [GHC.Types.Char]>_R
                                                  ->_R <Test.QuickCheck.Property.Testable
                                                          GHC.Types.Bool>_R
                                                  ->_R <[GHC.Types.Char] -> GHC.Types.Bool>_R
                                                  ->_R Trans
                                                           (Sym (Test.QuickCheck.Gen.N:Gen[0]
                                                                     (Test.QuickCheck.Property.N:Prop[0])))
                                                           (Sym (Test.QuickCheck.Property.N:Property[0])))
                                                 (<Test.QuickCheck.Arbitrary.Arbitrary
                                                     [GHC.Types.Char]>_R
                                                  ->_R <GHC.Show.Show [GHC.Types.Char]>_R
                                                  ->_R <Test.QuickCheck.Property.Testable
                                                          GHC.Types.Bool>_R
                                                  ->_R Sym (Test.QuickCheck.Property.N:Testable[0]
                                                                <[GHC.Types.Char]
                                                                 -> GHC.Types.Bool>_N))))))
                             (Test.QuickCheck.Property.N:Testable[0]
                                  <[GHC.Types.Char] -> GHC.Types.Bool>_N)))) -}
c72b6a68dcdd7c0b417704a83e259486
  main216 ::
    Test.QuickCheck.Random.QCGen
    -> GHC.Types.Int
    -> Test.QuickCheck.Property.Rose Test.QuickCheck.Property.Result
  {- Arity: 2, Strictness: <S(SSSSLL),1*U(U,U,U,1*U,A,A)><L,U>,
     Unfolding: (\ (eta :: Test.QuickCheck.Random.QCGen)
                   (eta1 :: GHC.Types.Int) ->
                 case eta
                        `cast`
                      (Test.QuickCheck.Random.N:QCGen[0]) of ww { System.Random.TF.Gen.TFGen ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Test.QuickCheck.Property.$wforAllShrink
                   @ [GHC.Types.Char]
                   @ GHC.Types.Bool
                   GHC.Show.$fShow[]_$s$fShow[]1
                   Test.QuickCheck.Property.$fTestableBool_$cproperty
                     `cast`
                   (Trans
                        (Sym (Test.QuickCheck.Property.N:Testable[0] <GHC.Types.Bool>_N))
                        (Nth:2
                             (Nth:3
                                  (Nth:3
                                       (Trans
                                            (<Test.QuickCheck.Arbitrary.Arbitrary
                                                [GHC.Types.Char]>_R
                                             ->_R <GHC.Show.Show [GHC.Types.Char]>_R
                                             ->_R <Test.QuickCheck.Property.Testable
                                                     GHC.Types.Bool>_R
                                             ->_R Test.QuickCheck.Property.N:Testable[0]
                                                      <[GHC.Types.Char] -> GHC.Types.Bool>_N)
                                            (<Test.QuickCheck.Arbitrary.Arbitrary
                                                [GHC.Types.Char]>_R
                                             ->_R <GHC.Show.Show [GHC.Types.Char]>_R
                                             ->_R <Test.QuickCheck.Property.Testable
                                                     GHC.Types.Bool>_R
                                             ->_R <[GHC.Types.Char] -> GHC.Types.Bool>_R
                                             ->_R Trans
                                                      (Test.QuickCheck.Property.N:Property[0])
                                                      (Test.QuickCheck.Gen.N:Gen[0]
                                                           (Test.QuickCheck.Property.N:Prop[0]))))))))
                   PhoneSpec.main218
                     `cast`
                   (Sym (Test.QuickCheck.Gen.N:Gen[0] <[GHC.Types.Char]>_R))
                   PhoneSpec.main217
                   PhoneSpec.main_f2
                   ww1
                   ww2
                   ww3
                   ww4
                   eta1 }) -}
7e3b3b54735c0f33f8c138888ed8295c
  main217 :: [GHC.Types.Char] -> [[GHC.Types.Char]]
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: [GHC.Types.Char]) ->
                 Test.QuickCheck.Arbitrary.shrinkList
                   @ GHC.Types.Char
                   Test.QuickCheck.Arbitrary.$fArbitraryChar_$cshrink
                   eta) -}
aff327e521bbd0be810cf35a1ef0ed06
  main218 ::
    Test.QuickCheck.Random.QCGen -> GHC.Types.Int -> [GHC.Types.Char]
  {- Arity: 2,
     Strictness: <S(SSSSLL),1*U(U,U,U,1*U,A,A)><S(S),1*U(U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (w1 :: Test.QuickCheck.Random.QCGen) (w2 :: GHC.Types.Int) ->
                 case w1
                        `cast`
                      (Test.QuickCheck.Random.N:QCGen[0]) of ww { System.Random.TF.Gen.TFGen ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w2 of ww7 { GHC.Types.I# ww8 ->
                 Test.QuickCheck.Gen.$wlistOf
                   @ GHC.Types.Char
                   Test.QuickCheck.Arbitrary.$fArbitraryChar_$carbitrary
                   ww1
                   ww2
                   ww3
                   ww4
                   ww8 } }) -}
58b0a80bdf2d9ca413fca0d897615154
  main219 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (Test.Hspec.Core.Tree.specItem13
                   PhoneSpec.main220) -}
985bdbe307290ecdd07314edbd3a0dfd
  main22 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it1
                   PhoneSpec.main23) -}
2b61c6815ce6cd98a68a7dd9f160a85b
  main220 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem11
                   Test.Hspec.Core.Tree.specItem3
                   PhoneSpec.main221) -}
fc39dd0aba742cdccf1891451278ccde
  main221 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it1
                   PhoneSpec.main222) -}
632abcc2809cd31b08cac415798e9677
  main222 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   PhoneSpec.main32
                   PhoneSpec.main223
                   GHC.Stack.Types.EmptyCallStack) -}
d28a2ca27920ee4bdc83640663334535
  main223 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   PhoneSpec.main31
                   PhoneSpec.main30
                   PhoneSpec.main28
                   PhoneSpec.main225
                   PhoneSpec.main26
                   PhoneSpec.main225
                   PhoneSpec.main224) -}
f202e014ea664bde41b33985d1388f16
  main224 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 49#) -}
ae73c68237534a646d04f41c37861134
  main225 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 62#) -}
7a8c8c491779a75d6d387e1bbac4afb6
  main226 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   PhoneSpec.main229
                   PhoneSpec.main227) -}
071b1cb621ff994d79967600591d037b
  main227 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# PhoneSpec.main228) -}
400bb1806077a6da5d5dc434f662b2c5
  main228 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("oken -> finger -> token should be true"#) -}
4478a47168d3744394c40d28841d9594
  main229 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 't'#) -}
84296b6e88fc33d73761325b915372a9
  main23 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   PhoneSpec.main32
                   PhoneSpec.main24
                   GHC.Stack.Types.EmptyCallStack) -}
a12264454438531840623cb0294e349e
  main230 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   PhoneSpec.main231
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.QuickCheck.Property.Property)))) -}
381dca7f8d258c5569f6d0905cf088f9
  main231 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   PhoneSpec.main232) -}
3411fe425b94426e808470302e33da15
  main232 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
                   PhoneSpec.main241
                   PhoneSpec.main235
                   GHC.Types.False
                   PhoneSpec.main233
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
0d989f288cd71b07f622802e62ae2c2a
  main233 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.QuickCheck.Property.Property
                   Test.Hspec.Core.Example.$fExampleProperty1
                     `cast`
                   (Trans
                        (<Test.QuickCheck.Property.Property>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <Test.Hspec.Core.Example.ActionWith
                                 (Test.Hspec.Core.Example.Arg
                                    (() -> Test.QuickCheck.Property.Property))
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Trans
                             (<Test.QuickCheck.Property.Property>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgProperty[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback
                                    -> GHC.Types.IO Test.Hspec.Core.Example.Result>_R)
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.QuickCheck.Property.Property>_N))))
                   PhoneSpec.main234
                     `cast`
                   (Nth:3
                        (Trans
                             (Nth:3
                                  (Nth:3
                                       (Nth:3
                                            (Trans
                                                 (<Test.QuickCheck.Arbitrary.Arbitrary
                                                     [Phone.FingerMove]>_R
                                                  ->_R <GHC.Show.Show [Phone.FingerMove]>_R
                                                  ->_R <Test.QuickCheck.Property.Testable
                                                          GHC.Types.Bool>_R
                                                  ->_R <[Phone.FingerMove] -> GHC.Types.Bool>_R
                                                  ->_R Trans
                                                           (Sym (Test.QuickCheck.Gen.N:Gen[0]
                                                                     (Test.QuickCheck.Property.N:Prop[0])))
                                                           (Sym (Test.QuickCheck.Property.N:Property[0])))
                                                 (<Test.QuickCheck.Arbitrary.Arbitrary
                                                     [Phone.FingerMove]>_R
                                                  ->_R <GHC.Show.Show [Phone.FingerMove]>_R
                                                  ->_R <Test.QuickCheck.Property.Testable
                                                          GHC.Types.Bool>_R
                                                  ->_R Sym (Test.QuickCheck.Property.N:Testable[0]
                                                                <[Phone.FingerMove]
                                                                 -> GHC.Types.Bool>_N))))))
                             (Test.QuickCheck.Property.N:Testable[0]
                                  <[Phone.FingerMove] -> GHC.Types.Bool>_N)))) -}
af0c1dfc5eeb96e3ad698c3387a33653
  main234 ::
    Test.QuickCheck.Random.QCGen
    -> GHC.Types.Int
    -> Test.QuickCheck.Property.Rose Test.QuickCheck.Property.Result
  {- Arity: 2, Strictness: <S(SSSSLL),1*U(U,U,U,1*U,A,A)><L,U>,
     Unfolding: (\ (eta :: Test.QuickCheck.Random.QCGen)
                   (eta1 :: GHC.Types.Int) ->
                 case eta
                        `cast`
                      (Test.QuickCheck.Random.N:QCGen[0]) of ww { System.Random.TF.Gen.TFGen ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Test.QuickCheck.Property.$wforAllShrink
                   @ [Phone.FingerMove]
                   @ GHC.Types.Bool
                   PhoneSpec.$s$fShow[]
                   Test.QuickCheck.Property.$fTestableBool_$cproperty
                     `cast`
                   (Trans
                        (Sym (Test.QuickCheck.Property.N:Testable[0] <GHC.Types.Bool>_N))
                        (Nth:2
                             (Nth:3
                                  (Nth:3
                                       (Trans
                                            (<Test.QuickCheck.Arbitrary.Arbitrary
                                                [Phone.FingerMove]>_R
                                             ->_R <GHC.Show.Show [Phone.FingerMove]>_R
                                             ->_R <Test.QuickCheck.Property.Testable
                                                     GHC.Types.Bool>_R
                                             ->_R Test.QuickCheck.Property.N:Testable[0]
                                                      <[Phone.FingerMove] -> GHC.Types.Bool>_N)
                                            (<Test.QuickCheck.Arbitrary.Arbitrary
                                                [Phone.FingerMove]>_R
                                             ->_R <GHC.Show.Show [Phone.FingerMove]>_R
                                             ->_R <Test.QuickCheck.Property.Testable
                                                     GHC.Types.Bool>_R
                                             ->_R <[Phone.FingerMove] -> GHC.Types.Bool>_R
                                             ->_R Trans
                                                      (Test.QuickCheck.Property.N:Property[0])
                                                      (Test.QuickCheck.Gen.N:Gen[0]
                                                           (Test.QuickCheck.Property.N:Prop[0]))))))))
                   PhoneSpec.main196
                     `cast`
                   (Sym (Test.QuickCheck.Gen.N:Gen[0]
                             <[(Phone.Token, Phone.Presses)]>_R))
                   PhoneSpec.main194
                   PhoneSpec.main_f3
                   ww1
                   ww2
                   ww3
                   ww4
                   eta1 }) -}
0062e8e9c3a873df27331ce04f14c343
  main235 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (Test.Hspec.Core.Tree.specItem13
                   PhoneSpec.main236) -}
92bdca0a645a441f549ecdf05f1bb635
  main236 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem11
                   Test.Hspec.Core.Tree.specItem3
                   PhoneSpec.main237) -}
a5f9d030d2010e69a3a057da7e79314d
  main237 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it1
                   PhoneSpec.main238) -}
aed9fa4ef8c67bcf7c7a42ab0686b01d
  main238 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   PhoneSpec.main32
                   PhoneSpec.main239
                   GHC.Stack.Types.EmptyCallStack) -}
959e286d0dd903d91c4a82201ff3dba5
  main239 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   PhoneSpec.main31
                   PhoneSpec.main30
                   PhoneSpec.main28
                   PhoneSpec.main74
                   PhoneSpec.main26
                   PhoneSpec.main74
                   PhoneSpec.main240) -}
b60a2c941fc47a88c41b4ce046625ee6
  main24 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   PhoneSpec.main31
                   PhoneSpec.main30
                   PhoneSpec.main28
                   PhoneSpec.main27
                   PhoneSpec.main26
                   PhoneSpec.main27
                   PhoneSpec.main25) -}
efbf12831edde52a7a06340e22ae23bb
  main240 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 50#) -}
00decaa295286622719cdacc2aa3734c
  main241 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   PhoneSpec.main206
                   PhoneSpec.main242) -}
32ae7b79942e47d1d5b4820a1ff15359
  main242 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# PhoneSpec.main243) -}
5e9eb36e449e091c712d73cc7b20a5ee
  main243 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("inger -> token -> finger should be true"#) -}
95aa7a3698a91dae6d77ca48b6afc617
  main244 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   PhoneSpec.main206
                   PhoneSpec.main245) -}
e83a6f1a2b71c57bef09176de51c349c
  main245 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# PhoneSpec.main246) -}
43d16cb89a8fcc64d873935f115d2cb5
  main246 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("ingerTokenize and tokenFingerize should be inverses"#) -}
fd86772d294cddd0342df88393571e65
  main247 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Strictness: m1,
     Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   PhoneSpec.main310
                   PhoneSpec.main248) -}
3fb1d9c80ac64e70204ca69ae39021dd
  main248 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   PhoneSpec.main295
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgBool[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgBool[0])))_R)_R])_R
                   PhoneSpec.main249) -}
7925f9abf553cfb8f9292ee878e5852c
  main249 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   PhoneSpec.main279
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgBool[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgBool[0])))_R)_R])_R
                   PhoneSpec.main250) -}
7795f716c2370dfa8f86c0349bddff49
  main25 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 55#) -}
6586f342d432deadf39bba2218e47de5
  main250 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   PhoneSpec.main265
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgProperty[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgProperty[0])))_R)_R])_R
                   PhoneSpec.main251
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgProperty[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgProperty[0])))_R)_R])_R) -}
598c8f4bbde5d03b0dfee08157a008ff
  main251 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   PhoneSpec.main252
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.QuickCheck.Property.Property)))) -}
e6d6ef3c9616f9320d400f8ff1f6a621
  main252 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   PhoneSpec.main253) -}
399f1545310ac35ef7da6c1f61c68834
  main253 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
                   PhoneSpec.main262
                   PhoneSpec.main256
                   GHC.Types.False
                   PhoneSpec.main254
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
6b4a52815758b1ec0aa736bf99ae698f
  main254 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.QuickCheck.Property.Property
                   Test.Hspec.Core.Example.$fExampleProperty1
                     `cast`
                   (Trans
                        (<Test.QuickCheck.Property.Property>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <Test.Hspec.Core.Example.ActionWith
                                 (Test.Hspec.Core.Example.Arg
                                    (() -> Test.QuickCheck.Property.Property))
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Trans
                             (<Test.QuickCheck.Property.Property>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgProperty[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback
                                    -> GHC.Types.IO Test.Hspec.Core.Example.Result>_R)
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.QuickCheck.Property.Property>_N))))
                   PhoneSpec.main255
                     `cast`
                   (Nth:3
                        (Trans
                             (Nth:3
                                  (Nth:3
                                       (Nth:3
                                            (Trans
                                                 (<Test.QuickCheck.Arbitrary.Arbitrary
                                                     [Phone.Button]>_R
                                                  ->_R <GHC.Show.Show [Phone.Button]>_R
                                                  ->_R <Test.QuickCheck.Property.Testable
                                                          GHC.Types.Bool>_R
                                                  ->_R <[Phone.Button] -> GHC.Types.Bool>_R
                                                  ->_R Trans
                                                           (Sym (Test.QuickCheck.Gen.N:Gen[0]
                                                                     (Test.QuickCheck.Property.N:Prop[0])))
                                                           (Sym (Test.QuickCheck.Property.N:Property[0])))
                                                 (<Test.QuickCheck.Arbitrary.Arbitrary
                                                     [Phone.Button]>_R
                                                  ->_R <GHC.Show.Show [Phone.Button]>_R
                                                  ->_R <Test.QuickCheck.Property.Testable
                                                          GHC.Types.Bool>_R
                                                  ->_R Sym (Test.QuickCheck.Property.N:Testable[0]
                                                                <[Phone.Button]
                                                                 -> GHC.Types.Bool>_N))))))
                             (Test.QuickCheck.Property.N:Testable[0]
                                  <[Phone.Button] -> GHC.Types.Bool>_N)))) -}
361212de57fd69672e5913f9a3bd5025
  main255 ::
    Test.QuickCheck.Random.QCGen
    -> GHC.Types.Int
    -> Test.QuickCheck.Property.Rose Test.QuickCheck.Property.Result
  {- Arity: 2, Strictness: <S(SSSSLL),1*U(U,U,U,1*U,A,A)><L,U>,
     Unfolding: (\ (eta :: Test.QuickCheck.Random.QCGen)
                   (eta1 :: GHC.Types.Int) ->
                 case eta
                        `cast`
                      (Test.QuickCheck.Random.N:QCGen[0]) of ww { System.Random.TF.Gen.TFGen ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Test.QuickCheck.Property.$wforAllShrink
                   @ [Phone.Button]
                   @ GHC.Types.Bool
                   PhoneSpec.$s$fShow[]1
                   Test.QuickCheck.Property.$fTestableBool_$cproperty
                     `cast`
                   (Trans
                        (Sym (Test.QuickCheck.Property.N:Testable[0] <GHC.Types.Bool>_N))
                        (Nth:2
                             (Nth:3
                                  (Nth:3
                                       (Trans
                                            (<Test.QuickCheck.Arbitrary.Arbitrary [Phone.Button]>_R
                                             ->_R <GHC.Show.Show [Phone.Button]>_R
                                             ->_R <Test.QuickCheck.Property.Testable
                                                     GHC.Types.Bool>_R
                                             ->_R Test.QuickCheck.Property.N:Testable[0]
                                                      <[Phone.Button] -> GHC.Types.Bool>_N)
                                            (<Test.QuickCheck.Arbitrary.Arbitrary [Phone.Button]>_R
                                             ->_R <GHC.Show.Show [Phone.Button]>_R
                                             ->_R <Test.QuickCheck.Property.Testable
                                                     GHC.Types.Bool>_R
                                             ->_R <[Phone.Button] -> GHC.Types.Bool>_R
                                             ->_R Trans
                                                      (Test.QuickCheck.Property.N:Property[0])
                                                      (Test.QuickCheck.Gen.N:Gen[0]
                                                           (Test.QuickCheck.Property.N:Prop[0]))))))))
                   PhoneSpec.main177
                     `cast`
                   (Sym (Test.QuickCheck.Gen.N:Gen[0] <[Phone.Button]>_R))
                   PhoneSpec.main176
                   PhoneSpec.main_f4
                   ww1
                   ww2
                   ww3
                   ww4
                   eta1 }) -}
8bfcf20982626c24c05c3e5aaafede9e
  main256 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (Test.Hspec.Core.Tree.specItem13
                   PhoneSpec.main257) -}
e3c4ae01b1c63f6bfb74ce5363e42073
  main257 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem11
                   Test.Hspec.Core.Tree.specItem3
                   PhoneSpec.main258) -}
ea0083ffdf5efd576bc7a32fae7b68e5
  main258 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it1
                   PhoneSpec.main259) -}
889d65d642562f7bba902c266f3632ee
  main259 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   PhoneSpec.main32
                   PhoneSpec.main260
                   GHC.Stack.Types.EmptyCallStack) -}
9b4d4392e3218c3ce243f482cd133eb1
  main26 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 5#) -}
f44bb519e518167ca89d211843f5a3d3
  main260 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   PhoneSpec.main31
                   PhoneSpec.main30
                   PhoneSpec.main28
                   PhoneSpec.main261
                   PhoneSpec.main26
                   PhoneSpec.main261
                   PhoneSpec.main240) -}
66e24d704e7e948d437fc2918505b8a4
  main261 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 44#) -}
a549f94172b27f31ebace752a1c8957b
  main262 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   PhoneSpec.main188
                   PhoneSpec.main263) -}
bc90a03f5b0c0c64ca3ffa3d7cf6106e
  main263 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# PhoneSpec.main264) -}
26c22877fb728801e0376477453e91b3
  main264 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("utton -> token -> button should be true"#) -}
e3b4838bcd14e69b00836f52baf39046
  main265 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   PhoneSpec.main266
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.QuickCheck.Property.Property)))) -}
d10c6112e7076b278c09b3f2aa5dbd9d
  main266 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   PhoneSpec.main267) -}
a4960ab8ee9d5d1fb26a983899b4b66e
  main267 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
                   PhoneSpec.main276
                   PhoneSpec.main270
                   GHC.Types.False
                   PhoneSpec.main268
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
c2bbb098a727e15b5975448b18407442
  main268 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.QuickCheck.Property.Property
                   Test.Hspec.Core.Example.$fExampleProperty1
                     `cast`
                   (Trans
                        (<Test.QuickCheck.Property.Property>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <Test.Hspec.Core.Example.ActionWith
                                 (Test.Hspec.Core.Example.Arg
                                    (() -> Test.QuickCheck.Property.Property))
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Trans
                             (<Test.QuickCheck.Property.Property>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgProperty[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback
                                    -> GHC.Types.IO Test.Hspec.Core.Example.Result>_R)
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.QuickCheck.Property.Property>_N))))
                   PhoneSpec.main269
                     `cast`
                   (Nth:3
                        (Trans
                             (Nth:3
                                  (Nth:3
                                       (Nth:3
                                            (Trans
                                                 (<Test.QuickCheck.Arbitrary.Arbitrary
                                                     [GHC.Types.Char]>_R
                                                  ->_R <GHC.Show.Show [GHC.Types.Char]>_R
                                                  ->_R <Test.QuickCheck.Property.Testable
                                                          GHC.Types.Bool>_R
                                                  ->_R <[GHC.Types.Char] -> GHC.Types.Bool>_R
                                                  ->_R Trans
                                                           (Sym (Test.QuickCheck.Gen.N:Gen[0]
                                                                     (Test.QuickCheck.Property.N:Prop[0])))
                                                           (Sym (Test.QuickCheck.Property.N:Property[0])))
                                                 (<Test.QuickCheck.Arbitrary.Arbitrary
                                                     [GHC.Types.Char]>_R
                                                  ->_R <GHC.Show.Show [GHC.Types.Char]>_R
                                                  ->_R <Test.QuickCheck.Property.Testable
                                                          GHC.Types.Bool>_R
                                                  ->_R Sym (Test.QuickCheck.Property.N:Testable[0]
                                                                <[GHC.Types.Char]
                                                                 -> GHC.Types.Bool>_N))))))
                             (Test.QuickCheck.Property.N:Testable[0]
                                  <[GHC.Types.Char] -> GHC.Types.Bool>_N)))) -}
b06d3d29b10fc099cb06686198fc699a
  main269 ::
    Test.QuickCheck.Random.QCGen
    -> GHC.Types.Int
    -> Test.QuickCheck.Property.Rose Test.QuickCheck.Property.Result
  {- Arity: 2, Strictness: <S(SSSSLL),1*U(U,U,U,1*U,A,A)><L,U>,
     Unfolding: (\ (eta :: Test.QuickCheck.Random.QCGen)
                   (eta1 :: GHC.Types.Int) ->
                 case eta
                        `cast`
                      (Test.QuickCheck.Random.N:QCGen[0]) of ww { System.Random.TF.Gen.TFGen ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Test.QuickCheck.Property.$wforAllShrink
                   @ [GHC.Types.Char]
                   @ GHC.Types.Bool
                   GHC.Show.$fShow[]_$s$fShow[]1
                   Test.QuickCheck.Property.$fTestableBool_$cproperty
                     `cast`
                   (Trans
                        (Sym (Test.QuickCheck.Property.N:Testable[0] <GHC.Types.Bool>_N))
                        (Nth:2
                             (Nth:3
                                  (Nth:3
                                       (Trans
                                            (<Test.QuickCheck.Arbitrary.Arbitrary
                                                [GHC.Types.Char]>_R
                                             ->_R <GHC.Show.Show [GHC.Types.Char]>_R
                                             ->_R <Test.QuickCheck.Property.Testable
                                                     GHC.Types.Bool>_R
                                             ->_R Test.QuickCheck.Property.N:Testable[0]
                                                      <[GHC.Types.Char] -> GHC.Types.Bool>_N)
                                            (<Test.QuickCheck.Arbitrary.Arbitrary
                                                [GHC.Types.Char]>_R
                                             ->_R <GHC.Show.Show [GHC.Types.Char]>_R
                                             ->_R <Test.QuickCheck.Property.Testable
                                                     GHC.Types.Bool>_R
                                             ->_R <[GHC.Types.Char] -> GHC.Types.Bool>_R
                                             ->_R Trans
                                                      (Test.QuickCheck.Property.N:Property[0])
                                                      (Test.QuickCheck.Gen.N:Gen[0]
                                                           (Test.QuickCheck.Property.N:Prop[0]))))))))
                   PhoneSpec.main218
                     `cast`
                   (Sym (Test.QuickCheck.Gen.N:Gen[0] <[GHC.Types.Char]>_R))
                   PhoneSpec.main217
                   PhoneSpec.main_f5
                   ww1
                   ww2
                   ww3
                   ww4
                   eta1 }) -}
77623c415f8812147a42718fff457fd9
  main27 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 130#) -}
085d410577a080b8db1b76b99d4bd7df
  main270 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (Test.Hspec.Core.Tree.specItem13
                   PhoneSpec.main271) -}
ce425cdc05cff83922ddab7ee0acbc7d
  main271 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem11
                   Test.Hspec.Core.Tree.specItem3
                   PhoneSpec.main272) -}
be31b4b50fed66cd1ea1ffa19fce253b
  main272 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it1
                   PhoneSpec.main273) -}
561c80ddb7e67c8d0918dd367c23d4bd
  main273 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   PhoneSpec.main32
                   PhoneSpec.main274
                   GHC.Stack.Types.EmptyCallStack) -}
29d9fb7f52a0179ce06df4f8727cfc1c
  main274 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   PhoneSpec.main31
                   PhoneSpec.main30
                   PhoneSpec.main28
                   PhoneSpec.main275
                   PhoneSpec.main26
                   PhoneSpec.main275
                   PhoneSpec.main224) -}
398bc8e8e2b10dbd02413226c65157ea
  main275 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 39#) -}
910d8f65eba8403a7186f1e206fd795f
  main276 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   PhoneSpec.main229
                   PhoneSpec.main277) -}
44c8416954822d640c6925b30763a07d
  main277 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# PhoneSpec.main278) -}
32073b7b637243a422cd42be5eae289b
  main278 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("oken -> button -> token should be true"#) -}
b0709841bfcd27273fff96e7499bb730
  main279 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg GHC.Types.Bool)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg GHC.Types.Bool))
                   PhoneSpec.main280
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg GHC.Types.Bool)))) -}
64e5467ba2d5c1d1664a99e0b78a467e
  main28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# PhoneSpec.main29) -}
351239e570781c93ddbeb618229a0d40
  main280 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg GHC.Types.Bool))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg GHC.Types.Bool))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg GHC.Types.Bool))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg GHC.Types.Bool))
                   PhoneSpec.main281) -}
9ffad692393698835d3b216e8f9bb491
  main281 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg GHC.Types.Bool)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg GHC.Types.Bool)
                   PhoneSpec.main292
                   PhoneSpec.main285
                   GHC.Types.False
                   PhoneSpec.main282
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg GHC.Types.Bool)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
0acfc1ca9e5f2fabb3d49791f8a77614
  main282 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg GHC.Types.Bool)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ GHC.Types.Bool
                   Test.Hspec.Core.Example.$fExampleBool1
                     `cast`
                   (Trans
                        (<GHC.Types.Bool>_R
                         ->_R Trans
                                  (<Test.Hspec.Core.Example.Params>_R
                                   ->_R <Test.Hspec.Core.Example.ActionWith
                                           (Test.Hspec.Core.Example.Arg (() -> GHC.Types.Bool))
                                         -> GHC.Types.IO ()>_R
                                   ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                                   ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                                  (<Test.Hspec.Core.Example.Params>_R
                                   ->_R ((Trans
                                              (Sub (Test.Hspec.Core.Example.D:R:Arg(->)1[0] <()>_N))
                                              (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgBool[0])))
                                          ->_R <GHC.Types.IO ()>_R)
                                         ->_R <GHC.Types.IO ()>_R)
                                   ->_R <Test.Hspec.Core.Example.ProgressCallback
                                         -> GHC.Types.IO Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0] <GHC.Types.Bool>_N)))
                   PhoneSpec.main283) -}
0b9e909c7fd3897b1335eb73a2f6174f
  main283 :: GHC.Types.Bool
  {- Unfolding: (GHC.Base.eqString
                   (Phone.buttonTokenize
                      (Phone.tokenButtonize
                         (GHC.CString.unpackCString# PhoneSpec.main284)))
                   (GHC.CString.unpackCString# PhoneSpec.main284)) -}
e72914411f3e8096a6210cc327c758f6
  main284 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("+ #,.?!13ac123..?.a"#) -}
26febb8d3b422cb7ddb1fb14c15d79fd
  main285 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (Test.Hspec.Core.Tree.specItem13
                   PhoneSpec.main286) -}
89b4dc214b45fab95a5fb081db0238b7
  main286 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem11
                   Test.Hspec.Core.Tree.specItem3
                   PhoneSpec.main287) -}
13a83d479bd95ac41f37dfb298da822f
  main287 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it1
                   PhoneSpec.main288) -}
8b8957aeaf5f7f8964aed96f7aac3475
  main288 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   PhoneSpec.main32
                   PhoneSpec.main289
                   GHC.Stack.Types.EmptyCallStack) -}
f2876533bab223ab5d8fd3010f2bb51d
  main289 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   PhoneSpec.main31
                   PhoneSpec.main30
                   PhoneSpec.main28
                   PhoneSpec.main291
                   PhoneSpec.main26
                   PhoneSpec.main291
                   PhoneSpec.main290) -}
5d9745eac63d12574bfa794c453c0d7e
  main29 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("test/PhoneSpec.hs"#) -}
8735db973407ae0a7cf1715a6f42e167
  main290 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 54#) -}
5dc325bbd6a18822722fd19e5ecf2bee
  main291 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 36#) -}
b5dc35c539a9e79001337a019219163c
  main292 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   PhoneSpec.main58
                   PhoneSpec.main293) -}
4264b434b471789d2b942caca8f55ff8
  main293 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# PhoneSpec.main294) -}
8aba4184f006f3c31d1fcb69acfdbfcf
  main294 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("an tell difference from english and numbers"#) -}
2e00c39a004cf5c60002813a3383a75e
  main295 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg GHC.Types.Bool)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg GHC.Types.Bool))
                   PhoneSpec.main296
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg GHC.Types.Bool)))) -}
9ba718ac54d5ac13609023751836a292
  main296 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg GHC.Types.Bool))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg GHC.Types.Bool))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg GHC.Types.Bool))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg GHC.Types.Bool))
                   PhoneSpec.main297) -}
ee8e77353ad7fd4013e1d79bb85d887e
  main297 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg GHC.Types.Bool)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg GHC.Types.Bool)
                   PhoneSpec.main307
                   PhoneSpec.main301
                   GHC.Types.False
                   PhoneSpec.main298
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg GHC.Types.Bool)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
e983c05deeba0b147d7853344d7470b4
  main298 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg GHC.Types.Bool)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ GHC.Types.Bool
                   Test.Hspec.Core.Example.$fExampleBool1
                     `cast`
                   (Trans
                        (<GHC.Types.Bool>_R
                         ->_R Trans
                                  (<Test.Hspec.Core.Example.Params>_R
                                   ->_R <Test.Hspec.Core.Example.ActionWith
                                           (Test.Hspec.Core.Example.Arg (() -> GHC.Types.Bool))
                                         -> GHC.Types.IO ()>_R
                                   ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                                   ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                                  (<Test.Hspec.Core.Example.Params>_R
                                   ->_R ((Trans
                                              (Sub (Test.Hspec.Core.Example.D:R:Arg(->)1[0] <()>_N))
                                              (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgBool[0])))
                                          ->_R <GHC.Types.IO ()>_R)
                                         ->_R <GHC.Types.IO ()>_R)
                                   ->_R <Test.Hspec.Core.Example.ProgressCallback
                                         -> GHC.Types.IO Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0] <GHC.Types.Bool>_N)))
                   PhoneSpec.main299) -}
3feaee32f01b316510ac90853d12c12c
  main299 :: GHC.Types.Bool
  {- Unfolding: (GHC.Base.eqString
                   (Phone.buttonTokenize
                      (Phone.tokenButtonize
                         (GHC.CString.unpackCString# PhoneSpec.main300)))
                   (GHC.CString.unpackCString# PhoneSpec.main300)) -}
c187ed54148b0071ba1aac73a1309dd6
  main3 :: ((), [Test.Hspec.Core.Tree.SpecTree ()])
  {- Strictness: m, Unfolding: ((GHC.Tuple.(), PhoneSpec.main4)) -}
f4f5f28d6ea1230fa40c754685310da6
  main30 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# PhoneSpec.$trModule2) -}
0109a5aa7af8f53b37284d710eb69968
  main300 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("HI 123 tHEre"#) -}
7a49b131f9accd849b55fac026f79177
  main301 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (Test.Hspec.Core.Tree.specItem13
                   PhoneSpec.main302) -}
ba552754274afe05dd80e7f3fb74834d
  main302 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem11
                   Test.Hspec.Core.Tree.specItem3
                   PhoneSpec.main303) -}
5d6571603852dc45594d672dec82997a
  main303 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it1
                   PhoneSpec.main304) -}
9be239857da8dca26d39e0c8d5af312f
  main304 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   PhoneSpec.main32
                   PhoneSpec.main305
                   GHC.Stack.Types.EmptyCallStack) -}
736fe976c5e9468b5398e5c98af780a5
  main305 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   PhoneSpec.main31
                   PhoneSpec.main30
                   PhoneSpec.main28
                   PhoneSpec.main306
                   PhoneSpec.main26
                   PhoneSpec.main306
                   PhoneSpec.main50) -}
1b966894d9e13e3a7fcde0d33851d378
  main306 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 33#) -}
b526c2a0d9eaebb23689909f24776129
  main307 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   PhoneSpec.main58
                   PhoneSpec.main308) -}
2bbd3e851948a10df1b017c71ddf4487
  main308 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# PhoneSpec.main309) -}
67f33d6934d3a8df7f1fba2ca6980dd5
  main309 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("an tell difference from capitals and lowercase"#) -}
9c75fc9a8e895cd79ce59298540598c1
  main31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# PhoneSpec.$trModule4) -}
1892d04428eb9307c07b310093619555
  main310 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   PhoneSpec.main229
                   PhoneSpec.main311) -}
deba8c1b2e0a0ad2b88d8ea0a1144448
  main311 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# PhoneSpec.main312) -}
bab25a7be4c03a38b63a90240081f713
  main312 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("okenButtonize and buttonTokenize should be inverses"#) -}
0b40fa83b8c4680b01791adcfbb3110a
  main313 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Strictness: m1,
     Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   PhoneSpec.main349
                   PhoneSpec.main314) -}
0f17e8879018247c950ecad4a4ab3675
  main314 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   PhoneSpec.main333
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgProperty[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgProperty[0])))_R)_R])_R
                   PhoneSpec.main315
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgProperty[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgProperty[0])))_R)_R])_R) -}
9384b57de142afd2fcc3db8cd28d007d
  main315 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   PhoneSpec.main316
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.QuickCheck.Property.Property)))) -}
d72cd3694cd51959f86714b9b6d6f18e
  main316 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   PhoneSpec.main317) -}
986e17e1983bec8bab676c03205adf47
  main317 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
                   PhoneSpec.main329
                   PhoneSpec.main323
                   GHC.Types.False
                   PhoneSpec.main318
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
f9811a5837b18c1835e57db2a4aa2060
  main318 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.QuickCheck.Property.Property
                   Test.Hspec.Core.Example.$fExampleProperty1
                     `cast`
                   (Trans
                        (<Test.QuickCheck.Property.Property>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <Test.Hspec.Core.Example.ActionWith
                                 (Test.Hspec.Core.Example.Arg
                                    (() -> Test.QuickCheck.Property.Property))
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Trans
                             (<Test.QuickCheck.Property.Property>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgProperty[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback
                                    -> GHC.Types.IO Test.Hspec.Core.Example.Result>_R)
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.QuickCheck.Property.Property>_N))))
                   PhoneSpec.main319
                     `cast`
                   (Nth:3
                        (Trans
                             (Nth:3
                                  (Nth:3
                                       (Nth:3
                                            (Trans
                                                 (<Test.QuickCheck.Arbitrary.Arbitrary
                                                     (Phone.Token, Phone.Presses)>_R
                                                  ->_R <GHC.Show.Show
                                                          (Phone.Token, Phone.Presses)>_R
                                                  ->_R <Test.QuickCheck.Property.Testable
                                                          GHC.Types.Bool>_R
                                                  ->_R <(Phone.Token, Phone.Presses)
                                                        -> GHC.Types.Bool>_R
                                                  ->_R Trans
                                                           (Sym (Test.QuickCheck.Gen.N:Gen[0]
                                                                     (Test.QuickCheck.Property.N:Prop[0])))
                                                           (Sym (Test.QuickCheck.Property.N:Property[0])))
                                                 (<Test.QuickCheck.Arbitrary.Arbitrary
                                                     (Phone.Token, Phone.Presses)>_R
                                                  ->_R <GHC.Show.Show
                                                          (Phone.Token, Phone.Presses)>_R
                                                  ->_R <Test.QuickCheck.Property.Testable
                                                          GHC.Types.Bool>_R
                                                  ->_R Sym (Test.QuickCheck.Property.N:Testable[0]
                                                                <(Phone.Token, Phone.Presses)
                                                                 -> GHC.Types.Bool>_N))))))
                             (Test.QuickCheck.Property.N:Testable[0]
                                  <Phone.FingerMove -> GHC.Types.Bool>_N)))) -}
037a1dfb543bc295aa0831fc871cddea
  main319 ::
    Test.QuickCheck.Random.QCGen
    -> GHC.Types.Int
    -> Test.QuickCheck.Property.Rose Test.QuickCheck.Property.Result
  {- Arity: 2, Strictness: <S(SSSSLL),1*U(U,U,U,1*U,A,A)><L,U>,
     Unfolding: (\ (eta :: Test.QuickCheck.Random.QCGen)
                   (eta1 :: GHC.Types.Int) ->
                 case eta
                        `cast`
                      (Test.QuickCheck.Random.N:QCGen[0]) of ww { System.Random.TF.Gen.TFGen ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Test.QuickCheck.Property.$wforAllShrink
                   @ (Phone.Token, Phone.Presses)
                   @ GHC.Types.Bool
                   PhoneSpec.$s$fShow(,)
                   Test.QuickCheck.Property.$fTestableBool_$cproperty
                     `cast`
                   (Trans
                        (Sym (Test.QuickCheck.Property.N:Testable[0] <GHC.Types.Bool>_N))
                        (Nth:2
                             (Nth:3
                                  (Nth:3
                                       (Trans
                                            (<Test.QuickCheck.Arbitrary.Arbitrary
                                                (Phone.Token, Phone.Presses)>_R
                                             ->_R <GHC.Show.Show (Phone.Token, Phone.Presses)>_R
                                             ->_R <Test.QuickCheck.Property.Testable
                                                     GHC.Types.Bool>_R
                                             ->_R Test.QuickCheck.Property.N:Testable[0]
                                                      <(Phone.Token, Phone.Presses)
                                                       -> GHC.Types.Bool>_N)
                                            (<Test.QuickCheck.Arbitrary.Arbitrary
                                                (Phone.Token, Phone.Presses)>_R
                                             ->_R <GHC.Show.Show (Phone.Token, Phone.Presses)>_R
                                             ->_R <Test.QuickCheck.Property.Testable
                                                     GHC.Types.Bool>_R
                                             ->_R <(Phone.Token, Phone.Presses) -> GHC.Types.Bool>_R
                                             ->_R Trans
                                                      (Test.QuickCheck.Property.N:Property[0])
                                                      (Test.QuickCheck.Gen.N:Gen[0]
                                                           (Test.QuickCheck.Property.N:Prop[0]))))))))
                   PhoneSpec.main322
                     `cast`
                   (Sym (Test.QuickCheck.Gen.N:Gen[0]
                             <(GHC.Types.Char, GHC.Types.Int)>_R))
                   PhoneSpec.main321
                   PhoneSpec.main320
                   ww1
                   ww2
                   ww3
                   ww4
                   eta1 }) -}
9c7cfb249562ca61112f09dab20b2c59
  main32 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# PhoneSpec.main33) -}
a17846b990f776421bf61d83720af4aa
  main320 :: Phone.FingerMove -> GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U(U(U),U(U))>,
     Unfolding: (\ (fng :: Phone.FingerMove) ->
                 case GHC.List.elem
                        @ Phone.FingerMove
                        PhoneSpec.$s$fEq(,)
                        fng
                        PhoneSpec.fngsAllowed of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case fng of ww { (,) ww1 ww2 ->
                      case ww1 of wild1 { GHC.Types.C# x ->
                      let {
                        $j :: GHC.Types.Bool <join 0>
                        = case Phone.$wravel
                                 (case ww2 of ww5 { GHC.Types.I# ww6 ->
                                  Phone.$wunravel x ww6 }) of ww4 { (#,#) ww5 ww6 ->
                          case ww5 of wild2 { GHC.Types.C# x1 ->
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.eqChar# x1 x) of wild3 {
                            GHC.Types.False -> GHC.Types.False
                            GHC.Types.True -> GHC.Classes.eqInt ww6 ww2 } } }
                      } in
                      case x of wild2 {
                        DEFAULT -> $j
                        '*'#
                        -> case ww2 of wild3 { GHC.Types.I# x1 ->
                           case x1 of wild4 {
                             DEFAULT -> $j 1# -> GHC.Types.True } } } } } }) -}
07385d336a04ac5162c8992e75021941
  main321 ::
    (GHC.Types.Char, GHC.Types.Int)
    -> [(GHC.Types.Char, GHC.Types.Int)]
  {- Arity: 1, Strictness: <S,1*U(U(U),U(U))>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (GHC.Types.Char, GHC.Types.Int)) ->
                 case w of ww { (,) ww1 ww2 -> PhoneSpec.$wlvl4 ww1 ww2 }) -}
eca1211ac178daa7188e88991da80efb
  main322 ::
    Test.QuickCheck.Random.QCGen
    -> GHC.Types.Int -> (GHC.Types.Char, GHC.Types.Int)
  {- Arity: 2, Strictness: <S(SSSSLL),1*U(U,U,U,1*U,A,A)><L,U(U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Test.QuickCheck.Random.QCGen) (w1 :: GHC.Types.Int) ->
                 case w `cast`
                      (Test.QuickCheck.Random.N:QCGen[0]) of ww { System.Random.TF.Gen.TFGen ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case PhoneSpec.$wlvl5 ww1 ww2 ww3 ww4 w1 of ww7 { (#,#) ww8 ww9 ->
                 (ww8, ww9) } }) -}
c989f1989b71385fe76f2fcdf14506a0
  main323 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (Test.Hspec.Core.Tree.specItem13
                   PhoneSpec.main324) -}
523c2e6b6582cc81e624a4a19bace1df
  main324 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem11
                   Test.Hspec.Core.Tree.specItem3
                   PhoneSpec.main325) -}
2567f5f583020a663c1620669597549a
  main325 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it1
                   PhoneSpec.main326) -}
d2365ff8d82c31a569c584527b0c4653
  main326 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   PhoneSpec.main32
                   PhoneSpec.main327
                   GHC.Stack.Types.EmptyCallStack) -}
1b9bd40636f55e4790c0536d14821a69
  main327 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   PhoneSpec.main31
                   PhoneSpec.main30
                   PhoneSpec.main28
                   PhoneSpec.main328
                   PhoneSpec.main26
                   PhoneSpec.main328
                   PhoneSpec.main275) -}
e9401b40e57ed7d65c7b0c1c53fb62e5
  main328 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 146#) -}
7988bc97a0ea4c453a15786bc4af1b33
  main329 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   PhoneSpec.main332
                   PhoneSpec.main330) -}
c059542793b77817a3c41f0aa7300301
  main33 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("it"#) -}
ef51bdbb95da4860af0470e7e65523a5
  main330 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# PhoneSpec.main331) -}
d676daf42450964460732e6ed6b135c7
  main331 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("nravel -> ravel must be true"#) -}
e229fa860ea2fa25210a4168beaafaca
  main332 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'u'#) -}
7b01116eb072007b49517851ef12e704
  main333 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   PhoneSpec.main334
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.QuickCheck.Property.Property)))) -}
9c93db71f582ee7cbd59a92e933725ee
  main334 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   PhoneSpec.main335) -}
f34297a6ea019440123e779806dabbb3
  main335 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
                   PhoneSpec.main346
                   PhoneSpec.main339
                   GHC.Types.False
                   PhoneSpec.main336
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
763e4313da3d21671c0d879b3092bf38
  main336 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.QuickCheck.Property.Property
                   Test.Hspec.Core.Example.$fExampleProperty1
                     `cast`
                   (Trans
                        (<Test.QuickCheck.Property.Property>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <Test.Hspec.Core.Example.ActionWith
                                 (Test.Hspec.Core.Example.Arg
                                    (() -> Test.QuickCheck.Property.Property))
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Trans
                             (<Test.QuickCheck.Property.Property>_R
                              ->_R <Test.Hspec.Core.Example.Params>_R
                              ->_R ((Trans
                                         (Sub (Test.Hspec.Core.Example.D:R:Arg(->)[0] <()>_N))
                                         (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgProperty[0])))
                                     ->_R <GHC.Types.IO ()>_R)
                                    ->_R <GHC.Types.IO ()>_R)
                              ->_R <Test.Hspec.Core.Example.ProgressCallback
                                    -> GHC.Types.IO Test.Hspec.Core.Example.Result>_R)
                             (Sym (Test.Hspec.Core.Example.N:Example[0]
                                       <Test.QuickCheck.Property.Property>_N))))
                   PhoneSpec.main337
                     `cast`
                   (Nth:3
                        (Trans
                             (Nth:3
                                  (Nth:3
                                       (Nth:3
                                            (Trans
                                                 (<Test.QuickCheck.Arbitrary.Arbitrary
                                                     GHC.Types.Char>_R
                                                  ->_R <GHC.Show.Show GHC.Types.Char>_R
                                                  ->_R <Test.QuickCheck.Property.Testable
                                                          GHC.Types.Bool>_R
                                                  ->_R <GHC.Types.Char -> GHC.Types.Bool>_R
                                                  ->_R Trans
                                                           (Sym (Test.QuickCheck.Gen.N:Gen[0]
                                                                     (Test.QuickCheck.Property.N:Prop[0])))
                                                           (Sym (Test.QuickCheck.Property.N:Property[0])))
                                                 (<Test.QuickCheck.Arbitrary.Arbitrary
                                                     GHC.Types.Char>_R
                                                  ->_R <GHC.Show.Show GHC.Types.Char>_R
                                                  ->_R <Test.QuickCheck.Property.Testable
                                                          GHC.Types.Bool>_R
                                                  ->_R Sym (Test.QuickCheck.Property.N:Testable[0]
                                                                <GHC.Types.Char
                                                                 -> GHC.Types.Bool>_N))))))
                             (Test.QuickCheck.Property.N:Testable[0]
                                  <GHC.Types.Char -> GHC.Types.Bool>_N)))) -}
9f1706959691b73eaed1e81d87e3944a
  main337 ::
    Test.QuickCheck.Random.QCGen
    -> GHC.Types.Int
    -> Test.QuickCheck.Property.Rose Test.QuickCheck.Property.Result
  {- Arity: 2, Strictness: <S(SSSSLL),1*U(U,U,U,1*U,A,A)><L,U>,
     Unfolding: (\ (eta :: Test.QuickCheck.Random.QCGen)
                   (eta1 :: GHC.Types.Int) ->
                 case eta
                        `cast`
                      (Test.QuickCheck.Random.N:QCGen[0]) of ww { System.Random.TF.Gen.TFGen ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Test.QuickCheck.Property.$wforAllShrink
                   @ GHC.Types.Char
                   @ GHC.Types.Bool
                   GHC.Show.$fShowChar
                   Test.QuickCheck.Property.$fTestableBool_$cproperty
                     `cast`
                   (Trans
                        (Sym (Test.QuickCheck.Property.N:Testable[0] <GHC.Types.Bool>_N))
                        (Nth:2
                             (Nth:3
                                  (Nth:3
                                       (Trans
                                            (<Test.QuickCheck.Arbitrary.Arbitrary GHC.Types.Char>_R
                                             ->_R <GHC.Show.Show GHC.Types.Char>_R
                                             ->_R <Test.QuickCheck.Property.Testable
                                                     GHC.Types.Bool>_R
                                             ->_R Test.QuickCheck.Property.N:Testable[0]
                                                      <GHC.Types.Char -> GHC.Types.Bool>_N)
                                            (<Test.QuickCheck.Arbitrary.Arbitrary GHC.Types.Char>_R
                                             ->_R <GHC.Show.Show GHC.Types.Char>_R
                                             ->_R <Test.QuickCheck.Property.Testable
                                                     GHC.Types.Bool>_R
                                             ->_R <GHC.Types.Char -> GHC.Types.Bool>_R
                                             ->_R Trans
                                                      (Test.QuickCheck.Property.N:Property[0])
                                                      (Test.QuickCheck.Gen.N:Gen[0]
                                                           (Test.QuickCheck.Property.N:Prop[0]))))))))
                   Test.QuickCheck.Arbitrary.$fArbitraryChar_$carbitrary
                   Test.QuickCheck.Arbitrary.$fArbitraryChar_$cshrink
                   PhoneSpec.main338
                   ww1
                   ww2
                   ww3
                   ww4
                   eta1 }) -}
5c1c504dc696d2941f56830f8a2a1187
  main338 :: GHC.Types.Char -> GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U(U)>,
     Unfolding: (\ (tok :: GHC.Types.Char) ->
                 case GHC.List.elem
                        @ GHC.Types.Char
                        GHC.Classes.$fEqChar
                        tok
                        PhoneSpec.toksAllowed of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case tok of ww { GHC.Types.C# ww1 ->
                      let {
                        $j :: GHC.Types.Bool <join 0>
                        = case {__pkg_ccall base-4.10.1.0 GHC.Prim.Int#
                                                          -> GHC.Prim.State# GHC.Prim.RealWorld
                                                          -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                                GHC.Prim.Int# #)}
                                 (GHC.Prim.ord# ww1)
                                 GHC.Prim.realWorld# of wild1 { (#,#) ds ds1 ->
                          case ds1 of wild2 {
                            DEFAULT
                            -> case Phone.$wravel ww of ww2 { (#,#) ww3 ww4 ->
                               case ww3 of ww5 { GHC.Types.C# ww6 ->
                               case ww4 of ww7 { GHC.Types.I# ww8 ->
                               case Phone.$wunravel ww6 ww8 of wild4 { GHC.Types.C# x ->
                               GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.eqChar# x ww1) } } } }
                            0# -> GHC.Types.True } }
                      } in
                      case GHC.Unicode.$wgeneralCategory ww1 of wild1 {
                        DEFAULT
                        -> case Phone.$wravel ww of ww2 { (#,#) ww3 ww4 ->
                           case ww3 of ww5 { GHC.Types.C# ww6 ->
                           case ww4 of ww7 { GHC.Types.I# ww8 ->
                           case Phone.$wunravel ww6 ww8 of wild2 { GHC.Types.C# x ->
                           GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqChar# x ww1) } } } }
                        GHC.Unicode.UppercaseLetter -> $j
                        GHC.Unicode.LowercaseLetter -> $j
                        GHC.Unicode.TitlecaseLetter -> $j
                        GHC.Unicode.ModifierLetter -> $j
                        GHC.Unicode.OtherLetter -> $j } } }) -}
a031fb61f836a77ecbfc8dc88276f7e8
  main339 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (Test.Hspec.Core.Tree.specItem13
                   PhoneSpec.main340) -}
100efc41dca93f70f7e081c8a406a7d9
  main34 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   PhoneSpec.main37
                   PhoneSpec.main35) -}
2ada3a33dbd7db26e275073827239095
  main340 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem11
                   Test.Hspec.Core.Tree.specItem3
                   PhoneSpec.main341) -}
4a8f518d0ca5501e144dce982c5cff5a
  main341 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it1
                   PhoneSpec.main342) -}
2b06d5e75b3b196594d62b2531e4b885
  main342 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   PhoneSpec.main32
                   PhoneSpec.main343
                   GHC.Stack.Types.EmptyCallStack) -}
28e5c789e4a2517da7d31c6fb1cc5649
  main343 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   PhoneSpec.main31
                   PhoneSpec.main30
                   PhoneSpec.main28
                   PhoneSpec.main345
                   PhoneSpec.main26
                   PhoneSpec.main345
                   PhoneSpec.main344) -}
30532854b6c7d7644023d51e0606752f
  main344 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 66#) -}
fa7596e455ae28db5bee79d8803bb7fc
  main345 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 140#) -}
c1ae12791e8ba3a39adcca3ca3807896
  main346 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   PhoneSpec.main37
                   PhoneSpec.main347) -}
7aae120ab4720285ca4a7c3f7a012e18
  main347 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# PhoneSpec.main348) -}
55a2cd4835045fa367ba36b9c3be9448
  main348 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("avel -> unravel must be true only if token is lowercase"#) -}
2d5a35770c1af9653c713f5907b65136
  main349 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   PhoneSpec.main37
                   PhoneSpec.main350) -}
2fbe6d9bfa5b0f759fe9901b3f39ae91
  main35 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# PhoneSpec.main36) -}
c89b18b8352b1066330b2a0a47954e22
  main350 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# PhoneSpec.main351) -}
7d8edf02f1801ba2648881e9da713fde
  main351 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("avel must be inverse of unravel and vice versa"#) -}
f9d79694ca5c25f5b4997bf5f4bb5596
  main36 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("eturns same amount if given lowercase letter"#) -}
ed976617b6594796ba5cc0b228b365a9
  main37 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'r'#) -}
fa65a838ec9ee2145d2c11223a1ef21b
  main38 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   PhoneSpec.main39
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
efecfa4f7bd66f732c5f19a13df82018
  main39 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   PhoneSpec.main40) -}
31d9a8b284fc79a41b3653fbc3bd12ee
  main4 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   PhoneSpec.main313
                   PhoneSpec.main5) -}
232d50c29a566b6b4822c5e96b616056
  main40 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   PhoneSpec.main52
                   PhoneSpec.main45
                   GHC.Types.False
                   PhoneSpec.main41
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
74a99eaf5f3e7722344ea599e6a07540
  main41 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   PhoneSpec.main42 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
edeb3fc0b85ad3db0f1a8ffb5710c0a3
  main42 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Phone.$wpresses PhoneSpec.main44 of ww { DEFAULT ->
                 case Phone.$wcost 'K'# of ww2 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# (GHC.Prim.+# ww 1#) ww2) of wild {
                   GHC.Types.False
                   -> case Test.HUnit.Lang.assertEqual_go
                             GHC.Show.$fShowBool1 of wild2 { () ->
                      case Test.HUnit.Lang.assertEqual_go
                             GHC.Show.$fShowBool3 of wild1 { () ->
                      PhoneSpec.main43 eta2 } }
                   GHC.Types.True -> (# eta2, GHC.Tuple.() #) } } }) -}
df2356abe45d870f61103a265841e46a
  main43 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <B,U>x -}
2440536a84b822a1c5d37ddec5e55d5f
  main44 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'k'#) -}
ae24a4525181e14c616200122c9809b4
  main45 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (Test.Hspec.Core.Tree.specItem13 PhoneSpec.main46) -}
1e4107c0de676282e9e99dcf2bf8e2b5
  main46 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem11
                   Test.Hspec.Core.Tree.specItem3
                   PhoneSpec.main47) -}
3ff570d6ffd1be7f54d65f712a295767
  main47 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it1
                   PhoneSpec.main48) -}
27578351c5ab8bb82f5867e5921408e8
  main48 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   PhoneSpec.main32
                   PhoneSpec.main49
                   GHC.Stack.Types.EmptyCallStack) -}
4402842442ef06033eb0d08463f8ee01
  main49 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   PhoneSpec.main31
                   PhoneSpec.main30
                   PhoneSpec.main28
                   PhoneSpec.main51
                   PhoneSpec.main26
                   PhoneSpec.main51
                   PhoneSpec.main50) -}
a405b7f0d5df7987344f99b0067ab0ff
  main5 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   PhoneSpec.main247
                   PhoneSpec.main6) -}
a0100ad3f5e5c328c3cd1a56f35c440c
  main50 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 57#) -}
89584dcda9552c760bece8e1cb1b84e5
  main51 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 127#) -}
8cba59fe179c231f1f8b5a25fb9ee8ab
  main52 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   PhoneSpec.main37
                   PhoneSpec.main53) -}
7eb0827d64295e531b5a0c65e97ae102
  main53 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# PhoneSpec.main54) -}
392f99a31e4f1fb8c3a59b21896cb356
  main54 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("eturns one greater than press if given capital"#) -}
5973d6f957975ec8ecd9f133cebb8889
  main55 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   PhoneSpec.main58
                   PhoneSpec.main56) -}
3d557a06f0afacb3c94a955a0a69f249
  main56 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# PhoneSpec.main57) -}
6cbfe5ff583cf29bbf31db9b95ce6dd8
  main57 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ost takes into account capitals"#) -}
0ef3012a0eb5f8051ebb17df8c2796f7
  main58 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'c'#) -}
5ac0cd46832678306359cc9710819b6a
  main59 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Strictness: m1,
     Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   PhoneSpec.main97
                   PhoneSpec.main60) -}
c28eb06096722f0cb94a9738c5075d26
  main6 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   PhoneSpec.main210
                   PhoneSpec.main7) -}
e1003780ebddb4c476e4e358ef686cd2
  main60 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   PhoneSpec.main81
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   PhoneSpec.main61
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R) -}
8c19000b0973716f41fe85a05e45dd1d
  main61 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   PhoneSpec.main62
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
fd70c7f0d553418407f332d5026f56fa
  main62 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   PhoneSpec.main63) -}
cda4fdbbbaaee1cb798202e7f78d6a02
  main63 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   PhoneSpec.main77
                   PhoneSpec.main69
                   GHC.Types.False
                   PhoneSpec.main64
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
07045bf7b02d6d439cea941fa542d9ed
  main64 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   PhoneSpec.main65 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
38a904581c97448420998f342c681b17
  main65 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Phone.$wpresses PhoneSpec.main68 of ww { DEFAULT ->
                 case Phone.$wpresses PhoneSpec.main67 of ww1 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww ww1) of wild {
                   GHC.Types.False
                   -> case Test.HUnit.Lang.assertEqual_go
                             GHC.Show.$fShowBool1 of wild2 { () ->
                      case Test.HUnit.Lang.assertEqual_go
                             GHC.Show.$fShowBool3 of wild1 { () ->
                      PhoneSpec.main66 eta2 } }
                   GHC.Types.True -> (# eta2, GHC.Tuple.() #) } } }) -}
0132df1590e9a2984c3894389e50d76e
  main66 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <B,U>x -}
e219b76e5b2bb0e2422046642b77036a
  main67 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 's'#) -}
17059bca532564fb3ffaf385bc9463c8
  main68 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# '2'#) -}
fcde7597ce8beef45f24f6ea9d3c9894
  main69 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (Test.Hspec.Core.Tree.specItem13 PhoneSpec.main70) -}
e3cb5ef5c7de5620602fddc19aaa5950
  main7 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   PhoneSpec.main169
                   PhoneSpec.main8) -}
1fad94af0696c2585ecdd3f068be1b1d
  main70 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem11
                   Test.Hspec.Core.Tree.specItem3
                   PhoneSpec.main71) -}
14aec834d3b47a5793db51827d4e14b3
  main71 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it1
                   PhoneSpec.main72) -}
f5031bbf607a6686beafe0c6abf2277e
  main72 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   PhoneSpec.main32
                   PhoneSpec.main73
                   GHC.Stack.Types.EmptyCallStack) -}
ee6e1e9444f0c267c67703fd0ae2952e
  main73 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   PhoneSpec.main31
                   PhoneSpec.main30
                   PhoneSpec.main28
                   PhoneSpec.main76
                   PhoneSpec.main26
                   PhoneSpec.main75
                   PhoneSpec.main74) -}
094f6218edbb3bde53c3984d861ad8bc
  main74 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 56#) -}
517413517bc30ec86e0dfb61d5fd7707
  main75 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 119#) -}
1b5a0b368c681c9783479de8b3375e21
  main76 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 118#) -}
f96279351011c8b2cd3bd6ac96d01de3
  main77 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   PhoneSpec.main80
                   PhoneSpec.main78) -}
0bb116ece1b6ffceb713984a936af55e
  main78 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# PhoneSpec.main79) -}
09ad959232d5114bc81d07751365edd0
  main79 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("resses of a number is always greater than or equal to presses of a letter  because numbers come after letters in keypad"#) -}
2d596d0a213984a0cf96af778f6d1297
  main8 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   PhoneSpec.main139
                   PhoneSpec.main9) -}
7df6f6de94c294b2afb0455859c450e1
  main80 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'p'#) -}
089a85ba09df2a2db5568347f65546c0
  main81 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   PhoneSpec.main82
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
e7248afec645cca5a9434abd6e858984
  main82 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   PhoneSpec.main83) -}
be5244e85a48439736f62ab64b5e839b
  main83 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   PhoneSpec.main94
                   PhoneSpec.main88
                   GHC.Types.False
                   PhoneSpec.main84
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
8d65842d79621865e8593f4640c6f2ef
  main84 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   PhoneSpec.main85 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
14c970b28add64508c8154c360dab43f
  main85 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Phone.$wpresses PhoneSpec.main44 of ww { DEFAULT ->
                 case Phone.$wpresses PhoneSpec.main87 of ww1 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# ww ww1) of wild {
                   GHC.Types.False
                   -> case Test.HUnit.Lang.assertEqual_go
                             GHC.Show.$fShowBool1 of wild2 { () ->
                      case Test.HUnit.Lang.assertEqual_go
                             GHC.Show.$fShowBool3 of wild1 { () ->
                      PhoneSpec.main86 eta2 } }
                   GHC.Types.True -> (# eta2, GHC.Tuple.() #) } } }) -}
ba4f2af51107e4e41d58ea4931bdc010
  main86 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <B,U>x -}
7432783fdf0cb4512d06fbc0fddb1a1a
  main87 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'K'#) -}
50c9685930e863a35494a5d818b4d98f
  main88 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (Test.Hspec.Core.Tree.specItem13 PhoneSpec.main89) -}
7e644141e71b9a601c4d20bb75281f18
  main89 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem11
                   Test.Hspec.Core.Tree.specItem3
                   PhoneSpec.main90) -}
945765726865b76f8ce9f7292b8f9e56
  main9 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   PhoneSpec.main100
                   PhoneSpec.main10) -}
2ab59f256952e3b3a6476a795ad0da9f
  main90 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it1
                   PhoneSpec.main91) -}
37cb40919bfda8db2540461698ac9dcc
  main91 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   PhoneSpec.main32
                   PhoneSpec.main92
                   GHC.Stack.Types.EmptyCallStack) -}
5db8584bae809534b366c606905a218b
  main92 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   PhoneSpec.main31
                   PhoneSpec.main30
                   PhoneSpec.main28
                   PhoneSpec.main93
                   PhoneSpec.main26
                   PhoneSpec.main93
                   PhoneSpec.main50) -}
3a9f76168af130936dae8652f8cfa66b
  main93 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 115#) -}
63782ca729298cb5d9f33b3b9fce7b12
  main94 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   PhoneSpec.main37
                   PhoneSpec.main95) -}
4734f71fcd6ba344b3ed09d0e9a5ba87
  main95 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# PhoneSpec.main96) -}
6a221b6a61d9b41d796c0e71217005fc
  main96 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("eturns same amount for lowercase and uppercase"#) -}
86469d025e89533be579547d533f2559
  main97 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   PhoneSpec.main80
                   PhoneSpec.main98) -}
ec786dd809a2a95d07a5cb7d7c3cd3f6
  main98 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# PhoneSpec.main99) -}
28330c944d373124e2c09a6cd37d4569
  main99 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("resses does not account for capitals"#) -}
6470360d54c1c5f5a4b97c9763173642
  main_f :: [Phone.Button] -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (btns :: [Phone.Button]) ->
                 let {
                   lvl57 :: GHC.Types.Bool <join 0>
                   = GHC.Classes.$fEq[]_$c==
                       @ Phone.Button
                       Phone.$fEqButton
                       (Phone.fingerButtonize (Phone.buttonFingerize btns))
                       btns
                 } in
                 letrec {
                   go2 :: [Phone.Button] -> GHC.Types.Bool
                     <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [Phone.Button]) ->
                     case ds of wild {
                       [] -> lvl57
                       : y ys
                       -> case GHC.List.elem
                                 @ Phone.Button
                                 Phone.$fEqButton
                                 y
                                 PhoneSpec.btnsAllowed of wild1 {
                            GHC.Types.False -> GHC.Types.True GHC.Types.True -> go2 ys } }
                 } in
                 go2 btns) -}
d6a3327f99d9837a741b5e99ed4f8ebd
  main_f1 :: [Phone.FingerMove] -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (fngs :: [Phone.FingerMove]) ->
                 let {
                   $j :: GHC.Types.Bool <join 0>
                   = case GHC.Classes.$fEq[]_$c==
                            @ (GHC.Types.Char, Phone.Presses)
                            PhoneSpec.$s$fEq(,)
                            fngs
                            (GHC.Types.[] @ (GHC.Types.Char, Phone.Presses)) of wild {
                       GHC.Types.False
                       -> case fngs of wild1 {
                            [] -> case GHC.List.badHead ret_ty GHC.Types.Bool of {}
                            : x ds1
                            -> case x of ww { (,) ww1 ww2 ->
                               case ww1 of wild2 { GHC.Types.C# x1 ->
                               case x1 of wild3 {
                                 DEFAULT
                                 -> GHC.Classes.$fEq[]_$c==
                                      @ (Phone.Token, Phone.Presses)
                                      PhoneSpec.$s$fEq(,)
                                      (Phone.buttonFingerize (Phone.fingerButtonize wild1))
                                      wild1
                                 '*'#
                                 -> case ww2 of wild4 { GHC.Types.I# x2 ->
                                    case x2 of wild5 {
                                      DEFAULT
                                      -> GHC.Classes.$fEq[]_$c==
                                           @ (Phone.Token, Phone.Presses)
                                           PhoneSpec.$s$fEq(,)
                                           (Phone.buttonFingerize (Phone.fingerButtonize wild1))
                                           wild1
                                      1# -> GHC.Types.True } } } } } }
                       GHC.Types.True
                       -> GHC.Classes.$fEq[]_$c==
                            @ (Phone.Token, Phone.Presses)
                            PhoneSpec.$s$fEq(,)
                            (Phone.buttonFingerize (Phone.fingerButtonize fngs))
                            fngs }
                 } in
                 letrec {
                   go2 :: [Phone.FingerMove] -> GHC.Types.Bool
                     <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [Phone.FingerMove]) ->
                     case ds of wild {
                       [] -> $j
                       : y ys
                       -> case GHC.List.elem
                                 @ Phone.FingerMove
                                 PhoneSpec.$s$fEq(,)
                                 y
                                 PhoneSpec.fngsAllowed of wild1 {
                            GHC.Types.False -> GHC.Types.True GHC.Types.True -> go2 ys } }
                 } in
                 go2 fngs) -}
f7cb99c7ca79cd5ef5809d8923161bb7
  main_f2 :: [GHC.Types.Char] -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (toks :: [GHC.Types.Char]) ->
                 let {
                   lvl57 :: GHC.Types.Bool <join 0>
                   = GHC.Base.eqString
                       (Phone.buttonTokenize
                          (Phone.fingerButtonize
                             (Phone.buttonFingerize (Phone.tokenButtonize toks))))
                       toks
                 } in
                 letrec {
                   go2 :: [GHC.Types.Char] -> GHC.Types.Bool
                     <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [GHC.Types.Char]) ->
                     case ds of wild {
                       [] -> lvl57
                       : y ys
                       -> case GHC.List.elem
                                 @ GHC.Types.Char
                                 GHC.Classes.$fEqChar
                                 y
                                 PhoneSpec.toksAllowed of wild1 {
                            GHC.Types.False -> GHC.Types.True GHC.Types.True -> go2 ys } }
                 } in
                 go2 toks) -}
b0b3ecfe6dc5352bb1c836b97c917d2f
  main_f3 :: [Phone.FingerMove] -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (fngs :: [Phone.FingerMove]) ->
                 let {
                   $j :: GHC.Types.Bool <join 0>
                   = case GHC.Classes.$fEq[]_$c==
                            @ (GHC.Types.Char, Phone.Presses)
                            PhoneSpec.$s$fEq(,)
                            fngs
                            (GHC.Types.[] @ (GHC.Types.Char, Phone.Presses)) of wild {
                       GHC.Types.False
                       -> case fngs of wild1 {
                            [] -> case GHC.List.badHead ret_ty GHC.Types.Bool of {}
                            : x ds1
                            -> case x of ww { (,) ww1 ww2 ->
                               case ww1 of wild2 { GHC.Types.C# x1 ->
                               case x1 of wild3 {
                                 DEFAULT
                                 -> GHC.Classes.$fEq[]_$c==
                                      @ (Phone.Token, Phone.Presses)
                                      PhoneSpec.$s$fEq(,)
                                      (Phone.buttonFingerize
                                         (Phone.tokenButtonize
                                            (Phone.buttonTokenize (Phone.fingerButtonize wild1))))
                                      wild1
                                 '*'#
                                 -> case ww2 of wild4 { GHC.Types.I# x2 ->
                                    case x2 of wild5 {
                                      DEFAULT
                                      -> GHC.Classes.$fEq[]_$c==
                                           @ (Phone.Token, Phone.Presses)
                                           PhoneSpec.$s$fEq(,)
                                           (Phone.buttonFingerize
                                              (Phone.tokenButtonize
                                                 (Phone.buttonTokenize
                                                    (Phone.fingerButtonize wild1))))
                                           wild1
                                      1# -> GHC.Types.True } } } } } }
                       GHC.Types.True
                       -> GHC.Classes.$fEq[]_$c==
                            @ (Phone.Token, Phone.Presses)
                            PhoneSpec.$s$fEq(,)
                            (Phone.buttonFingerize
                               (Phone.tokenButtonize
                                  (Phone.buttonTokenize (Phone.fingerButtonize fngs))))
                            fngs }
                 } in
                 letrec {
                   go2 :: [Phone.FingerMove] -> GHC.Types.Bool
                     <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [Phone.FingerMove]) ->
                     case ds of wild {
                       [] -> $j
                       : y ys
                       -> case GHC.List.elem
                                 @ Phone.FingerMove
                                 PhoneSpec.$s$fEq(,)
                                 y
                                 PhoneSpec.fngsAllowed of wild1 {
                            GHC.Types.False -> GHC.Types.True GHC.Types.True -> go2 ys } }
                 } in
                 go2 fngs) -}
b736d5e3151f576f536699c4e572645d
  main_f4 :: [Phone.Button] -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (btns :: [Phone.Button]) ->
                 let {
                   lvl57 :: GHC.Types.Bool <join 0>
                   = GHC.Classes.$fEq[]_$c==
                       @ Phone.Button
                       Phone.$fEqButton
                       (Phone.tokenButtonize (Phone.buttonTokenize btns))
                       btns
                 } in
                 letrec {
                   go2 :: [Phone.Button] -> GHC.Types.Bool
                     <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [Phone.Button]) ->
                     case ds of wild {
                       [] -> lvl57
                       : y ys
                       -> case GHC.List.elem
                                 @ Phone.Button
                                 Phone.$fEqButton
                                 y
                                 PhoneSpec.btnsAllowed of wild1 {
                            GHC.Types.False -> GHC.Types.True GHC.Types.True -> go2 ys } }
                 } in
                 go2 btns) -}
cc92b989dd3a9ad075c6e6443cbf0d2c
  main_f5 :: [GHC.Types.Char] -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (toks :: [GHC.Types.Char]) ->
                 let {
                   lvl57 :: GHC.Types.Bool <join 0>
                   = GHC.Base.eqString
                       (Phone.buttonTokenize (Phone.tokenButtonize toks))
                       toks
                 } in
                 letrec {
                   go2 :: [GHC.Types.Char] -> GHC.Types.Bool
                     <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [GHC.Types.Char]) ->
                     case ds of wild {
                       [] -> lvl57
                       : y ys
                       -> case GHC.List.elem
                                 @ GHC.Types.Char
                                 GHC.Classes.$fEqChar
                                 y
                                 PhoneSpec.toksAllowed of wild1 {
                            GHC.Types.False -> GHC.Types.True GHC.Types.True -> go2 ys } }
                 } in
                 go2 toks) -}
bb3194736fd1569644cf0e95d9c7f572
  spec :: Test.Hspec.Core.Spec.Monad.Spec
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                PhoneSpec.main2
                  `cast`
                (Trans
                     (Sym (GHC.Types.N:IO[0]
                               <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                     (Trans
                          (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                    <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N))
                          (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0] <()>_N) <()>_N))) -}
d1009adfa42650d1890417a45a0cdc6e
  toksAllowed :: [GHC.Types.Char]
  {- Unfolding: (PhoneSpec.$fArbitraryButton_go
                   PhoneSpec.$fArbitraryButton1) -}
instance [orphan] Test.QuickCheck.Arbitrary.Arbitrary [Phone.Button]
  = PhoneSpec.$fArbitraryButton
"SPEC/PhoneSpec $fArbitrary(,)1 @ Char @ Int" [orphan] forall ($dArbitrary1 :: Test.QuickCheck.Arbitrary.Arbitrary
                                                                                 GHC.Types.Int)
                                                              ($dArbitrary :: Test.QuickCheck.Arbitrary.Arbitrary
                                                                                GHC.Types.Char)
  Test.QuickCheck.Arbitrary.$fArbitrary(,)1 @ GHC.Types.Char
                                            @ GHC.Types.Int
                                            $dArbitrary
                                            $dArbitrary1
  = PhoneSpec.$s$fArbitrary(,)1
"SPEC/PhoneSpec $fEq(,) @ Char @ Presses" [orphan] forall (v1 :: GHC.Classes.Eq
                                                                   Phone.Presses)
                                                          (v :: GHC.Classes.Eq GHC.Types.Char)
  GHC.Classes.$fEq(,) @ GHC.Types.Char @ GHC.Types.Int v v1
  = PhoneSpec.$s$fEq(,)
"SPEC/PhoneSpec $fEq[] @ (Token, Presses)" [orphan] forall (v :: GHC.Classes.Eq
                                                                   (Phone.Token, Phone.Presses))
  GHC.Classes.$fEq[] @ (Phone.Token, Phone.Presses) v
  = PhoneSpec.$s$fEq[]
"SPEC/PhoneSpec $fEq[]_$c/= @ (Token, Presses)" [orphan] forall ($dEq :: GHC.Classes.Eq
                                                                           (Phone.Token,
                                                                            Phone.Presses))
  GHC.Classes.$fEq[]_$c/= @ (Phone.Token, Phone.Presses) $dEq
  = PhoneSpec.$s$fEq[]_$s$fEq[]_$c/=
"SPEC/PhoneSpec $fShow(,) @ Char @ Int" [orphan] forall (v1 :: GHC.Show.Show
                                                                 GHC.Types.Int)
                                                        (v :: GHC.Show.Show GHC.Types.Char)
  GHC.Show.$fShow(,) @ GHC.Types.Char @ GHC.Types.Int v v1
  = PhoneSpec.$s$fShow(,)
"SPEC/PhoneSpec $fShow[] @ (Token, Presses)" [orphan] forall (v :: GHC.Show.Show
                                                                     (Phone.Token, Phone.Presses))
  GHC.Show.$fShow[] @ (Phone.Token, Phone.Presses) v
  = PhoneSpec.$s$fShow[]
"SPEC/PhoneSpec $fShow[] @ Button" [orphan] forall (v :: GHC.Show.Show
                                                           Phone.Button)
  GHC.Show.$fShow[] @ Phone.Button v = PhoneSpec.$s$fShow[]1
"SPEC/PhoneSpec $fShow[]_$cshow @ Button" [orphan] forall ($dShow :: GHC.Show.Show
                                                                       Phone.Button)
  GHC.Show.$fShow[]_$cshow @ Phone.Button $dShow
  = PhoneSpec.$s$fShow[]_$cshow1
"SPEC/PhoneSpec $fShow[]_$cshowList @ Button" [orphan] forall ($dShow :: GHC.Show.Show
                                                                           Phone.Button)
  GHC.Show.$fShow[]_$cshowList @ Phone.Button $dShow
  = PhoneSpec.$s$fShow[]_$cshowList1
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

