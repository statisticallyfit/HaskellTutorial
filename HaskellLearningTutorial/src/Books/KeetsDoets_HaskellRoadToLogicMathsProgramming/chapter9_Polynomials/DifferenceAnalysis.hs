module DifferenceAnalysis where


difs :: [Integer] -> [Integer]
difs [] = []
difs [n] = []
difs (n:m:ks) = m-n : difs (m:ks)

f :: Integer -> Integer
f = \n -> 2*n^2 + n + 1

--- the difference function d(f) is: a(sub n+1) - a(sub n)
--- is the same as difs function above
df :: Integer -> Integer
df = \n -> 4*n + 3


xs :: [Integer]
xs = map f [0..14]

dxs :: [Integer]
dxs = map df [0..14]

ys :: [Integer]
ys = [-12, -11, 6, 45, 112, 213, 354, 541, 780, 1077]


---------
-- note keeps generating difference lists until differences get constant
-- (means that the function was of degree equal to number of times differenced)
difLists :: [[Integer]] -> [[Integer]]
difLists [] = []
difLists lists@(xs:xss) =
    if constant xs then lists else difLists ((difs xs) : lists)
    where
    constant (n:m:ms) = all (== n) (m:ms)
    constant _ = error "lack of data or not a polynomial function"


--- returns list containing last elements of the differenced lists. Sum of this
-- list will yield next element of original (first) list
genDifs :: [Integer] -> [Integer]
genDifs xs = map last (difLists [xs])

-- basically is left cumulative sum
nextD :: [Integer] -> [Integer]
nextD [] = error "no data"
nextD [n] = [n]
nextD (n:m:ks) = n : nextD (n+m : ks)

-- yields same result as sum of last elements of difLists which is the same as
-- sum of list returned by genDifs
next :: [Integer] -> Integer
next = last . nextD . genDifs


-- returns not just the next element of a sequence or function, but also
-- the rest of the values (infinite)
continue :: [Integer] -> [Integer]
continue xs = map last (iterate nextD differences)
    where differences = nextD (genDifs xs)



--- degree of polynomial (assuming list values are generated by polynomial)
-- we are minusing by one since we don't count the last list that contains constant
-- differenced values, as that is residue.
-- note for high polynomial degree, we need lots of values else difLists will
-- return the custom 'not enough data' error.
degree :: [Integer] -> Int
degree xs = length (difLists [xs]) - 1


